//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AciNetworkProviderObservation) DeepCopyInto(out *AciNetworkProviderObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AciNetworkProviderObservation.
func (in *AciNetworkProviderObservation) DeepCopy() *AciNetworkProviderObservation {
	if in == nil {
		return nil
	}
	out := new(AciNetworkProviderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AciNetworkProviderParameters) DeepCopyInto(out *AciNetworkProviderParameters) {
	*out = *in
	if in.Aep != nil {
		in, out := &in.Aep, &out.Aep
		*out = new(string)
		**out = **in
	}
	if in.ApicHosts != nil {
		in, out := &in.ApicHosts, &out.ApicHosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	out.ApicUserCrtSecretRef = in.ApicUserCrtSecretRef
	out.ApicUserKeySecretRef = in.ApicUserKeySecretRef
	if in.ApicUserName != nil {
		in, out := &in.ApicUserName, &out.ApicUserName
		*out = new(string)
		**out = **in
	}
	if in.EncapType != nil {
		in, out := &in.EncapType, &out.EncapType
		*out = new(string)
		**out = **in
	}
	if in.ExternDynamic != nil {
		in, out := &in.ExternDynamic, &out.ExternDynamic
		*out = new(string)
		**out = **in
	}
	if in.ExternStatic != nil {
		in, out := &in.ExternStatic, &out.ExternStatic
		*out = new(string)
		**out = **in
	}
	if in.InfraVlan != nil {
		in, out := &in.InfraVlan, &out.InfraVlan
		*out = new(string)
		**out = **in
	}
	if in.KubeAPIVlan != nil {
		in, out := &in.KubeAPIVlan, &out.KubeAPIVlan
		*out = new(string)
		**out = **in
	}
	if in.L3Out != nil {
		in, out := &in.L3Out, &out.L3Out
		*out = new(string)
		**out = **in
	}
	if in.L3OutExternalNetworks != nil {
		in, out := &in.L3OutExternalNetworks, &out.L3OutExternalNetworks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.McastRangeEnd != nil {
		in, out := &in.McastRangeEnd, &out.McastRangeEnd
		*out = new(string)
		**out = **in
	}
	if in.McastRangeStart != nil {
		in, out := &in.McastRangeStart, &out.McastRangeStart
		*out = new(string)
		**out = **in
	}
	if in.NodeSubnet != nil {
		in, out := &in.NodeSubnet, &out.NodeSubnet
		*out = new(string)
		**out = **in
	}
	if in.NodeSvcSubnet != nil {
		in, out := &in.NodeSvcSubnet, &out.NodeSvcSubnet
		*out = new(string)
		**out = **in
	}
	if in.ServiceVlan != nil {
		in, out := &in.ServiceVlan, &out.ServiceVlan
		*out = new(string)
		**out = **in
	}
	if in.SnatPortRangeEnd != nil {
		in, out := &in.SnatPortRangeEnd, &out.SnatPortRangeEnd
		*out = new(string)
		**out = **in
	}
	if in.SnatPortRangeStart != nil {
		in, out := &in.SnatPortRangeStart, &out.SnatPortRangeStart
		*out = new(string)
		**out = **in
	}
	if in.SnatPortsPerNode != nil {
		in, out := &in.SnatPortsPerNode, &out.SnatPortsPerNode
		*out = new(string)
		**out = **in
	}
	if in.SystemID != nil {
		in, out := &in.SystemID, &out.SystemID
		*out = new(string)
		**out = **in
	}
	out.TokenSecretRef = in.TokenSecretRef
	if in.VrfName != nil {
		in, out := &in.VrfName, &out.VrfName
		*out = new(string)
		**out = **in
	}
	if in.VrfTenant != nil {
		in, out := &in.VrfTenant, &out.VrfTenant
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AciNetworkProviderParameters.
func (in *AciNetworkProviderParameters) DeepCopy() *AciNetworkProviderParameters {
	if in == nil {
		return nil
	}
	out := new(AciNetworkProviderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuditLogConfigurationObservation) DeepCopyInto(out *AuditLogConfigurationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuditLogConfigurationObservation.
func (in *AuditLogConfigurationObservation) DeepCopy() *AuditLogConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(AuditLogConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuditLogConfigurationParameters) DeepCopyInto(out *AuditLogConfigurationParameters) {
	*out = *in
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
	if in.MaxBackup != nil {
		in, out := &in.MaxBackup, &out.MaxBackup
		*out = new(float64)
		**out = **in
	}
	if in.MaxSize != nil {
		in, out := &in.MaxSize, &out.MaxSize
		*out = new(float64)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuditLogConfigurationParameters.
func (in *AuditLogConfigurationParameters) DeepCopy() *AuditLogConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(AuditLogConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuditLogObservation) DeepCopyInto(out *AuditLogObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuditLogObservation.
func (in *AuditLogObservation) DeepCopy() *AuditLogObservation {
	if in == nil {
		return nil
	}
	out := new(AuditLogObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuditLogParameters) DeepCopyInto(out *AuditLogParameters) {
	*out = *in
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make([]ConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuditLogParameters.
func (in *AuditLogParameters) DeepCopy() *AuditLogParameters {
	if in == nil {
		return nil
	}
	out := new(AuditLogParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthenticationObservation) DeepCopyInto(out *AuthenticationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthenticationObservation.
func (in *AuthenticationObservation) DeepCopy() *AuthenticationObservation {
	if in == nil {
		return nil
	}
	out := new(AuthenticationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthenticationParameters) DeepCopyInto(out *AuthenticationParameters) {
	*out = *in
	if in.Sans != nil {
		in, out := &in.Sans, &out.Sans
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Strategy != nil {
		in, out := &in.Strategy, &out.Strategy
		*out = new(string)
		**out = **in
	}
	if in.Webhook != nil {
		in, out := &in.Webhook, &out.Webhook
		*out = make([]WebhookParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthenticationParameters.
func (in *AuthenticationParameters) DeepCopy() *AuthenticationParameters {
	if in == nil {
		return nil
	}
	out := new(AuthenticationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthorizationObservation) DeepCopyInto(out *AuthorizationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthorizationObservation.
func (in *AuthorizationObservation) DeepCopy() *AuthorizationObservation {
	if in == nil {
		return nil
	}
	out := new(AuthorizationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthorizationParameters) DeepCopyInto(out *AuthorizationParameters) {
	*out = *in
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthorizationParameters.
func (in *AuthorizationParameters) DeepCopy() *AuthorizationParameters {
	if in == nil {
		return nil
	}
	out := new(AuthorizationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsCloudConfigObservation) DeepCopyInto(out *AwsCloudConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsCloudConfigObservation.
func (in *AwsCloudConfigObservation) DeepCopy() *AwsCloudConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AwsCloudConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsCloudConfigParameters) DeepCopyInto(out *AwsCloudConfigParameters) {
	*out = *in
	if in.Global != nil {
		in, out := &in.Global, &out.Global
		*out = make([]GlobalParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceOverride != nil {
		in, out := &in.ServiceOverride, &out.ServiceOverride
		*out = make([]ServiceOverrideParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsCloudConfigParameters.
func (in *AwsCloudConfigParameters) DeepCopy() *AwsCloudConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AwsCloudConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsCloudProviderGlobalObservation) DeepCopyInto(out *AwsCloudProviderGlobalObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsCloudProviderGlobalObservation.
func (in *AwsCloudProviderGlobalObservation) DeepCopy() *AwsCloudProviderGlobalObservation {
	if in == nil {
		return nil
	}
	out := new(AwsCloudProviderGlobalObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsCloudProviderGlobalParameters) DeepCopyInto(out *AwsCloudProviderGlobalParameters) {
	*out = *in
	if in.DisableSecurityGroupIngress != nil {
		in, out := &in.DisableSecurityGroupIngress, &out.DisableSecurityGroupIngress
		*out = new(bool)
		**out = **in
	}
	if in.DisableStrictZoneCheck != nil {
		in, out := &in.DisableStrictZoneCheck, &out.DisableStrictZoneCheck
		*out = new(bool)
		**out = **in
	}
	if in.ELBSecurityGroup != nil {
		in, out := &in.ELBSecurityGroup, &out.ELBSecurityGroup
		*out = new(string)
		**out = **in
	}
	if in.KubernetesClusterID != nil {
		in, out := &in.KubernetesClusterID, &out.KubernetesClusterID
		*out = new(string)
		**out = **in
	}
	if in.KubernetesClusterTag != nil {
		in, out := &in.KubernetesClusterTag, &out.KubernetesClusterTag
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.VPC != nil {
		in, out := &in.VPC, &out.VPC
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsCloudProviderGlobalParameters.
func (in *AwsCloudProviderGlobalParameters) DeepCopy() *AwsCloudProviderGlobalParameters {
	if in == nil {
		return nil
	}
	out := new(AwsCloudProviderGlobalParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsCloudProviderObservation) DeepCopyInto(out *AwsCloudProviderObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsCloudProviderObservation.
func (in *AwsCloudProviderObservation) DeepCopy() *AwsCloudProviderObservation {
	if in == nil {
		return nil
	}
	out := new(AwsCloudProviderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsCloudProviderParameters) DeepCopyInto(out *AwsCloudProviderParameters) {
	*out = *in
	if in.Global != nil {
		in, out := &in.Global, &out.Global
		*out = make([]AwsCloudProviderGlobalParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceOverride != nil {
		in, out := &in.ServiceOverride, &out.ServiceOverride
		*out = make([]AwsCloudProviderServiceOverrideParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsCloudProviderParameters.
func (in *AwsCloudProviderParameters) DeepCopy() *AwsCloudProviderParameters {
	if in == nil {
		return nil
	}
	out := new(AwsCloudProviderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsCloudProviderServiceOverrideObservation) DeepCopyInto(out *AwsCloudProviderServiceOverrideObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsCloudProviderServiceOverrideObservation.
func (in *AwsCloudProviderServiceOverrideObservation) DeepCopy() *AwsCloudProviderServiceOverrideObservation {
	if in == nil {
		return nil
	}
	out := new(AwsCloudProviderServiceOverrideObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsCloudProviderServiceOverrideParameters) DeepCopyInto(out *AwsCloudProviderServiceOverrideParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.SigningMethod != nil {
		in, out := &in.SigningMethod, &out.SigningMethod
		*out = new(string)
		**out = **in
	}
	if in.SigningName != nil {
		in, out := &in.SigningName, &out.SigningName
		*out = new(string)
		**out = **in
	}
	if in.SigningRegion != nil {
		in, out := &in.SigningRegion, &out.SigningRegion
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsCloudProviderServiceOverrideParameters.
func (in *AwsCloudProviderServiceOverrideParameters) DeepCopy() *AwsCloudProviderServiceOverrideParameters {
	if in == nil {
		return nil
	}
	out := new(AwsCloudProviderServiceOverrideParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureCloudConfigObservation) DeepCopyInto(out *AzureCloudConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureCloudConfigObservation.
func (in *AzureCloudConfigObservation) DeepCopy() *AzureCloudConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AzureCloudConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureCloudConfigParameters) DeepCopyInto(out *AzureCloudConfigParameters) {
	*out = *in
	if in.AadClientCertPasswordSecretRef != nil {
		in, out := &in.AadClientCertPasswordSecretRef, &out.AadClientCertPasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.AadClientCertPath != nil {
		in, out := &in.AadClientCertPath, &out.AadClientCertPath
		*out = new(string)
		**out = **in
	}
	out.AadClientIDSecretRef = in.AadClientIDSecretRef
	out.AadClientSecretSecretRef = in.AadClientSecretSecretRef
	if in.Cloud != nil {
		in, out := &in.Cloud, &out.Cloud
		*out = new(string)
		**out = **in
	}
	if in.CloudProviderBackoff != nil {
		in, out := &in.CloudProviderBackoff, &out.CloudProviderBackoff
		*out = new(bool)
		**out = **in
	}
	if in.CloudProviderBackoffDuration != nil {
		in, out := &in.CloudProviderBackoffDuration, &out.CloudProviderBackoffDuration
		*out = new(float64)
		**out = **in
	}
	if in.CloudProviderBackoffExponent != nil {
		in, out := &in.CloudProviderBackoffExponent, &out.CloudProviderBackoffExponent
		*out = new(float64)
		**out = **in
	}
	if in.CloudProviderBackoffJitter != nil {
		in, out := &in.CloudProviderBackoffJitter, &out.CloudProviderBackoffJitter
		*out = new(float64)
		**out = **in
	}
	if in.CloudProviderBackoffRetries != nil {
		in, out := &in.CloudProviderBackoffRetries, &out.CloudProviderBackoffRetries
		*out = new(float64)
		**out = **in
	}
	if in.CloudProviderRateLimit != nil {
		in, out := &in.CloudProviderRateLimit, &out.CloudProviderRateLimit
		*out = new(bool)
		**out = **in
	}
	if in.CloudProviderRateLimitBucket != nil {
		in, out := &in.CloudProviderRateLimitBucket, &out.CloudProviderRateLimitBucket
		*out = new(float64)
		**out = **in
	}
	if in.CloudProviderRateLimitQPS != nil {
		in, out := &in.CloudProviderRateLimitQPS, &out.CloudProviderRateLimitQPS
		*out = new(float64)
		**out = **in
	}
	if in.LoadBalancerSku != nil {
		in, out := &in.LoadBalancerSku, &out.LoadBalancerSku
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MaximumLoadBalancerRuleCount != nil {
		in, out := &in.MaximumLoadBalancerRuleCount, &out.MaximumLoadBalancerRuleCount
		*out = new(float64)
		**out = **in
	}
	if in.PrimaryAvailabilitySetName != nil {
		in, out := &in.PrimaryAvailabilitySetName, &out.PrimaryAvailabilitySetName
		*out = new(string)
		**out = **in
	}
	if in.PrimaryScaleSetName != nil {
		in, out := &in.PrimaryScaleSetName, &out.PrimaryScaleSetName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.RouteTableName != nil {
		in, out := &in.RouteTableName, &out.RouteTableName
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupName != nil {
		in, out := &in.SecurityGroupName, &out.SecurityGroupName
		*out = new(string)
		**out = **in
	}
	if in.SubnetName != nil {
		in, out := &in.SubnetName, &out.SubnetName
		*out = new(string)
		**out = **in
	}
	out.SubscriptionIDSecretRef = in.SubscriptionIDSecretRef
	out.TenantIDSecretRef = in.TenantIDSecretRef
	if in.UseInstanceMetadata != nil {
		in, out := &in.UseInstanceMetadata, &out.UseInstanceMetadata
		*out = new(bool)
		**out = **in
	}
	if in.UseManagedIdentityExtension != nil {
		in, out := &in.UseManagedIdentityExtension, &out.UseManagedIdentityExtension
		*out = new(bool)
		**out = **in
	}
	if in.VMType != nil {
		in, out := &in.VMType, &out.VMType
		*out = new(string)
		**out = **in
	}
	if in.VnetName != nil {
		in, out := &in.VnetName, &out.VnetName
		*out = new(string)
		**out = **in
	}
	if in.VnetResourceGroup != nil {
		in, out := &in.VnetResourceGroup, &out.VnetResourceGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureCloudConfigParameters.
func (in *AzureCloudConfigParameters) DeepCopy() *AzureCloudConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AzureCloudConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureCloudProviderObservation) DeepCopyInto(out *AzureCloudProviderObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureCloudProviderObservation.
func (in *AzureCloudProviderObservation) DeepCopy() *AzureCloudProviderObservation {
	if in == nil {
		return nil
	}
	out := new(AzureCloudProviderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureCloudProviderParameters) DeepCopyInto(out *AzureCloudProviderParameters) {
	*out = *in
	if in.AadClientCertPasswordSecretRef != nil {
		in, out := &in.AadClientCertPasswordSecretRef, &out.AadClientCertPasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.AadClientCertPath != nil {
		in, out := &in.AadClientCertPath, &out.AadClientCertPath
		*out = new(string)
		**out = **in
	}
	out.AadClientIDSecretRef = in.AadClientIDSecretRef
	out.AadClientSecretSecretRef = in.AadClientSecretSecretRef
	if in.Cloud != nil {
		in, out := &in.Cloud, &out.Cloud
		*out = new(string)
		**out = **in
	}
	if in.CloudProviderBackoff != nil {
		in, out := &in.CloudProviderBackoff, &out.CloudProviderBackoff
		*out = new(bool)
		**out = **in
	}
	if in.CloudProviderBackoffDuration != nil {
		in, out := &in.CloudProviderBackoffDuration, &out.CloudProviderBackoffDuration
		*out = new(float64)
		**out = **in
	}
	if in.CloudProviderBackoffExponent != nil {
		in, out := &in.CloudProviderBackoffExponent, &out.CloudProviderBackoffExponent
		*out = new(float64)
		**out = **in
	}
	if in.CloudProviderBackoffJitter != nil {
		in, out := &in.CloudProviderBackoffJitter, &out.CloudProviderBackoffJitter
		*out = new(float64)
		**out = **in
	}
	if in.CloudProviderBackoffRetries != nil {
		in, out := &in.CloudProviderBackoffRetries, &out.CloudProviderBackoffRetries
		*out = new(float64)
		**out = **in
	}
	if in.CloudProviderRateLimit != nil {
		in, out := &in.CloudProviderRateLimit, &out.CloudProviderRateLimit
		*out = new(bool)
		**out = **in
	}
	if in.CloudProviderRateLimitBucket != nil {
		in, out := &in.CloudProviderRateLimitBucket, &out.CloudProviderRateLimitBucket
		*out = new(float64)
		**out = **in
	}
	if in.CloudProviderRateLimitQPS != nil {
		in, out := &in.CloudProviderRateLimitQPS, &out.CloudProviderRateLimitQPS
		*out = new(float64)
		**out = **in
	}
	if in.LoadBalancerSku != nil {
		in, out := &in.LoadBalancerSku, &out.LoadBalancerSku
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MaximumLoadBalancerRuleCount != nil {
		in, out := &in.MaximumLoadBalancerRuleCount, &out.MaximumLoadBalancerRuleCount
		*out = new(float64)
		**out = **in
	}
	if in.PrimaryAvailabilitySetName != nil {
		in, out := &in.PrimaryAvailabilitySetName, &out.PrimaryAvailabilitySetName
		*out = new(string)
		**out = **in
	}
	if in.PrimaryScaleSetName != nil {
		in, out := &in.PrimaryScaleSetName, &out.PrimaryScaleSetName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.RouteTableName != nil {
		in, out := &in.RouteTableName, &out.RouteTableName
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupName != nil {
		in, out := &in.SecurityGroupName, &out.SecurityGroupName
		*out = new(string)
		**out = **in
	}
	if in.SubnetName != nil {
		in, out := &in.SubnetName, &out.SubnetName
		*out = new(string)
		**out = **in
	}
	out.SubscriptionIDSecretRef = in.SubscriptionIDSecretRef
	out.TenantIDSecretRef = in.TenantIDSecretRef
	if in.UseInstanceMetadata != nil {
		in, out := &in.UseInstanceMetadata, &out.UseInstanceMetadata
		*out = new(bool)
		**out = **in
	}
	if in.UseManagedIdentityExtension != nil {
		in, out := &in.UseManagedIdentityExtension, &out.UseManagedIdentityExtension
		*out = new(bool)
		**out = **in
	}
	if in.VMType != nil {
		in, out := &in.VMType, &out.VMType
		*out = new(string)
		**out = **in
	}
	if in.VnetName != nil {
		in, out := &in.VnetName, &out.VnetName
		*out = new(string)
		**out = **in
	}
	if in.VnetResourceGroup != nil {
		in, out := &in.VnetResourceGroup, &out.VnetResourceGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureCloudProviderParameters.
func (in *AzureCloudProviderParameters) DeepCopy() *AzureCloudProviderParameters {
	if in == nil {
		return nil
	}
	out := new(AzureCloudProviderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupConfigObservation) DeepCopyInto(out *BackupConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupConfigObservation.
func (in *BackupConfigObservation) DeepCopy() *BackupConfigObservation {
	if in == nil {
		return nil
	}
	out := new(BackupConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupConfigParameters) DeepCopyInto(out *BackupConfigParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IntervalHours != nil {
		in, out := &in.IntervalHours, &out.IntervalHours
		*out = new(float64)
		**out = **in
	}
	if in.Retention != nil {
		in, out := &in.Retention, &out.Retention
		*out = new(float64)
		**out = **in
	}
	if in.S3BackupConfig != nil {
		in, out := &in.S3BackupConfig, &out.S3BackupConfig
		*out = make([]S3BackupConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SafeTimestamp != nil {
		in, out := &in.SafeTimestamp, &out.SafeTimestamp
		*out = new(bool)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupConfigParameters.
func (in *BackupConfigParameters) DeepCopy() *BackupConfigParameters {
	if in == nil {
		return nil
	}
	out := new(BackupConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupConfigS3BackupConfigObservation) DeepCopyInto(out *BackupConfigS3BackupConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupConfigS3BackupConfigObservation.
func (in *BackupConfigS3BackupConfigObservation) DeepCopy() *BackupConfigS3BackupConfigObservation {
	if in == nil {
		return nil
	}
	out := new(BackupConfigS3BackupConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupConfigS3BackupConfigParameters) DeepCopyInto(out *BackupConfigS3BackupConfigParameters) {
	*out = *in
	if in.AccessKeySecretRef != nil {
		in, out := &in.AccessKeySecretRef, &out.AccessKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.CustomCA != nil {
		in, out := &in.CustomCA, &out.CustomCA
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SecretKeySecretRef != nil {
		in, out := &in.SecretKeySecretRef, &out.SecretKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupConfigS3BackupConfigParameters.
func (in *BackupConfigS3BackupConfigParameters) DeepCopy() *BackupConfigS3BackupConfigParameters {
	if in == nil {
		return nil
	}
	out := new(BackupConfigS3BackupConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BastionHostObservation) DeepCopyInto(out *BastionHostObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BastionHostObservation.
func (in *BastionHostObservation) DeepCopy() *BastionHostObservation {
	if in == nil {
		return nil
	}
	out := new(BastionHostObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BastionHostParameters) DeepCopyInto(out *BastionHostParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.IgnoreProxyEnvVars != nil {
		in, out := &in.IgnoreProxyEnvVars, &out.IgnoreProxyEnvVars
		*out = new(bool)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.SSHAgentAuth != nil {
		in, out := &in.SSHAgentAuth, &out.SSHAgentAuth
		*out = new(bool)
		**out = **in
	}
	if in.SSHCertPath != nil {
		in, out := &in.SSHCertPath, &out.SSHCertPath
		*out = new(string)
		**out = **in
	}
	if in.SSHCertSecretRef != nil {
		in, out := &in.SSHCertSecretRef, &out.SSHCertSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SSHKeyPath != nil {
		in, out := &in.SSHKeyPath, &out.SSHKeyPath
		*out = new(string)
		**out = **in
	}
	if in.SSHKeySecretRef != nil {
		in, out := &in.SSHKeySecretRef, &out.SSHKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BastionHostParameters.
func (in *BastionHostParameters) DeepCopy() *BastionHostParameters {
	if in == nil {
		return nil
	}
	out := new(BastionHostParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockStorageObservation) DeepCopyInto(out *BlockStorageObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockStorageObservation.
func (in *BlockStorageObservation) DeepCopy() *BlockStorageObservation {
	if in == nil {
		return nil
	}
	out := new(BlockStorageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockStorageParameters) DeepCopyInto(out *BlockStorageParameters) {
	*out = *in
	if in.BsVersion != nil {
		in, out := &in.BsVersion, &out.BsVersion
		*out = new(string)
		**out = **in
	}
	if in.IgnoreVolumeAz != nil {
		in, out := &in.IgnoreVolumeAz, &out.IgnoreVolumeAz
		*out = new(bool)
		**out = **in
	}
	if in.TrustDevicePath != nil {
		in, out := &in.TrustDevicePath, &out.TrustDevicePath
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockStorageParameters.
func (in *BlockStorageParameters) DeepCopy() *BlockStorageParameters {
	if in == nil {
		return nil
	}
	out := new(BlockStorageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CalicoNetworkProviderObservation) DeepCopyInto(out *CalicoNetworkProviderObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CalicoNetworkProviderObservation.
func (in *CalicoNetworkProviderObservation) DeepCopy() *CalicoNetworkProviderObservation {
	if in == nil {
		return nil
	}
	out := new(CalicoNetworkProviderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CalicoNetworkProviderParameters) DeepCopyInto(out *CalicoNetworkProviderParameters) {
	*out = *in
	if in.CloudProvider != nil {
		in, out := &in.CloudProvider, &out.CloudProvider
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CalicoNetworkProviderParameters.
func (in *CalicoNetworkProviderParameters) DeepCopy() *CalicoNetworkProviderParameters {
	if in == nil {
		return nil
	}
	out := new(CalicoNetworkProviderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CanalNetworkProviderObservation) DeepCopyInto(out *CanalNetworkProviderObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CanalNetworkProviderObservation.
func (in *CanalNetworkProviderObservation) DeepCopy() *CanalNetworkProviderObservation {
	if in == nil {
		return nil
	}
	out := new(CanalNetworkProviderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CanalNetworkProviderParameters) DeepCopyInto(out *CanalNetworkProviderParameters) {
	*out = *in
	if in.Iface != nil {
		in, out := &in.Iface, &out.Iface
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CanalNetworkProviderParameters.
func (in *CanalNetworkProviderParameters) DeepCopy() *CanalNetworkProviderParameters {
	if in == nil {
		return nil
	}
	out := new(CanalNetworkProviderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificatesObservation) DeepCopyInto(out *CertificatesObservation) {
	*out = *in
	if in.Certificate != nil {
		in, out := &in.Certificate, &out.Certificate
		*out = new(string)
		**out = **in
	}
	if in.CommonName != nil {
		in, out := &in.CommonName, &out.CommonName
		*out = new(string)
		**out = **in
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = new(string)
		**out = **in
	}
	if in.ConfigEnvName != nil {
		in, out := &in.ConfigEnvName, &out.ConfigEnvName
		*out = new(string)
		**out = **in
	}
	if in.ConfigPath != nil {
		in, out := &in.ConfigPath, &out.ConfigPath
		*out = new(string)
		**out = **in
	}
	if in.EnvName != nil {
		in, out := &in.EnvName, &out.EnvName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.KeyEnvName != nil {
		in, out := &in.KeyEnvName, &out.KeyEnvName
		*out = new(string)
		**out = **in
	}
	if in.KeyPath != nil {
		in, out := &in.KeyPath, &out.KeyPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OuName != nil {
		in, out := &in.OuName, &out.OuName
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificatesObservation.
func (in *CertificatesObservation) DeepCopy() *CertificatesObservation {
	if in == nil {
		return nil
	}
	out := new(CertificatesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificatesParameters) DeepCopyInto(out *CertificatesParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificatesParameters.
func (in *CertificatesParameters) DeepCopy() *CertificatesParameters {
	if in == nil {
		return nil
	}
	out := new(CertificatesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudProviderObservation) DeepCopyInto(out *CloudProviderObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudProviderObservation.
func (in *CloudProviderObservation) DeepCopy() *CloudProviderObservation {
	if in == nil {
		return nil
	}
	out := new(CloudProviderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudProviderParameters) DeepCopyInto(out *CloudProviderParameters) {
	*out = *in
	if in.AwsCloudConfig != nil {
		in, out := &in.AwsCloudConfig, &out.AwsCloudConfig
		*out = make([]AwsCloudConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AwsCloudProvider != nil {
		in, out := &in.AwsCloudProvider, &out.AwsCloudProvider
		*out = make([]AwsCloudProviderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureCloudConfig != nil {
		in, out := &in.AzureCloudConfig, &out.AzureCloudConfig
		*out = make([]AzureCloudConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureCloudProvider != nil {
		in, out := &in.AzureCloudProvider, &out.AzureCloudProvider
		*out = make([]AzureCloudProviderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomCloudConfig != nil {
		in, out := &in.CustomCloudConfig, &out.CustomCloudConfig
		*out = new(string)
		**out = **in
	}
	if in.CustomCloudProvider != nil {
		in, out := &in.CustomCloudProvider, &out.CustomCloudProvider
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OpenstackCloudConfig != nil {
		in, out := &in.OpenstackCloudConfig, &out.OpenstackCloudConfig
		*out = make([]OpenstackCloudConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OpenstackCloudProvider != nil {
		in, out := &in.OpenstackCloudProvider, &out.OpenstackCloudProvider
		*out = make([]OpenstackCloudProviderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VsphereCloudConfig != nil {
		in, out := &in.VsphereCloudConfig, &out.VsphereCloudConfig
		*out = make([]VsphereCloudConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VsphereCloudProvider != nil {
		in, out := &in.VsphereCloudProvider, &out.VsphereCloudProvider
		*out = make([]VsphereCloudProviderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudProviderParameters.
func (in *CloudProviderParameters) DeepCopy() *CloudProviderParameters {
	if in == nil {
		return nil
	}
	out := new(CloudProviderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster) DeepCopyInto(out *Cluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster.
func (in *Cluster) DeepCopy() *Cluster {
	if in == nil {
		return nil
	}
	out := new(Cluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Cluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterList) DeepCopyInto(out *ClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Cluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterList.
func (in *ClusterList) DeepCopy() *ClusterList {
	if in == nil {
		return nil
	}
	out := new(ClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterNetworkObservation) DeepCopyInto(out *ClusterNetworkObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterNetworkObservation.
func (in *ClusterNetworkObservation) DeepCopy() *ClusterNetworkObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterNetworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterNetworkParameters) DeepCopyInto(out *ClusterNetworkParameters) {
	*out = *in
	if in.AciNetworkProvider != nil {
		in, out := &in.AciNetworkProvider, &out.AciNetworkProvider
		*out = make([]AciNetworkProviderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CalicoNetworkProvider != nil {
		in, out := &in.CalicoNetworkProvider, &out.CalicoNetworkProvider
		*out = make([]CalicoNetworkProviderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CanalNetworkProvider != nil {
		in, out := &in.CanalNetworkProvider, &out.CanalNetworkProvider
		*out = make([]CanalNetworkProviderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FlannelNetworkProvider != nil {
		in, out := &in.FlannelNetworkProvider, &out.FlannelNetworkProvider
		*out = make([]FlannelNetworkProviderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mtu != nil {
		in, out := &in.Mtu, &out.Mtu
		*out = new(float64)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Plugin != nil {
		in, out := &in.Plugin, &out.Plugin
		*out = new(string)
		**out = **in
	}
	if in.WeaveNetworkProvider != nil {
		in, out := &in.WeaveNetworkProvider, &out.WeaveNetworkProvider
		*out = make([]WeaveNetworkProviderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterNetworkParameters.
func (in *ClusterNetworkParameters) DeepCopy() *ClusterNetworkParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterNetworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterObservation) DeepCopyInto(out *ClusterObservation) {
	*out = *in
	if in.APIServerURL != nil {
		in, out := &in.APIServerURL, &out.APIServerURL
		*out = new(string)
		**out = **in
	}
	if in.ClusterCidr != nil {
		in, out := &in.ClusterCidr, &out.ClusterCidr
		*out = new(string)
		**out = **in
	}
	if in.ClusterDNSServer != nil {
		in, out := &in.ClusterDNSServer, &out.ClusterDNSServer
		*out = new(string)
		**out = **in
	}
	if in.ClusterDomain != nil {
		in, out := &in.ClusterDomain, &out.ClusterDomain
		*out = new(string)
		**out = **in
	}
	if in.ControlPlaneHosts != nil {
		in, out := &in.ControlPlaneHosts, &out.ControlPlaneHosts
		*out = make([]ControlPlaneHostsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EtcdHosts != nil {
		in, out := &in.EtcdHosts, &out.EtcdHosts
		*out = make([]EtcdHostsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InactiveHosts != nil {
		in, out := &in.InactiveHosts, &out.InactiveHosts
		*out = make([]InactiveHostsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KubeAdminUser != nil {
		in, out := &in.KubeAdminUser, &out.KubeAdminUser
		*out = new(string)
		**out = **in
	}
	if in.RunningSystemImages != nil {
		in, out := &in.RunningSystemImages, &out.RunningSystemImages
		*out = make([]RunningSystemImagesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkerHosts != nil {
		in, out := &in.WorkerHosts, &out.WorkerHosts
		*out = make([]WorkerHostsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterObservation.
func (in *ClusterObservation) DeepCopy() *ClusterObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterParameters) DeepCopyInto(out *ClusterParameters) {
	*out = *in
	if in.AddonJobTimeout != nil {
		in, out := &in.AddonJobTimeout, &out.AddonJobTimeout
		*out = new(float64)
		**out = **in
	}
	if in.Addons != nil {
		in, out := &in.Addons, &out.Addons
		*out = new(string)
		**out = **in
	}
	if in.AddonsInclude != nil {
		in, out := &in.AddonsInclude, &out.AddonsInclude
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Authentication != nil {
		in, out := &in.Authentication, &out.Authentication
		*out = make([]AuthenticationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Authorization != nil {
		in, out := &in.Authorization, &out.Authorization
		*out = make([]AuthorizationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BastionHost != nil {
		in, out := &in.BastionHost, &out.BastionHost
		*out = make([]BastionHostParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CertDir != nil {
		in, out := &in.CertDir, &out.CertDir
		*out = new(string)
		**out = **in
	}
	if in.CloudProvider != nil {
		in, out := &in.CloudProvider, &out.CloudProvider
		*out = make([]CloudProviderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterYamlSecretRef != nil {
		in, out := &in.ClusterYamlSecretRef, &out.ClusterYamlSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.CustomCerts != nil {
		in, out := &in.CustomCerts, &out.CustomCerts
		*out = new(bool)
		**out = **in
	}
	if in.DNS != nil {
		in, out := &in.DNS, &out.DNS
		*out = make([]DNSParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DelayOnCreation != nil {
		in, out := &in.DelayOnCreation, &out.DelayOnCreation
		*out = new(float64)
		**out = **in
	}
	if in.Dind != nil {
		in, out := &in.Dind, &out.Dind
		*out = new(bool)
		**out = **in
	}
	if in.DindDNSServer != nil {
		in, out := &in.DindDNSServer, &out.DindDNSServer
		*out = new(string)
		**out = **in
	}
	if in.DindStorageDriver != nil {
		in, out := &in.DindStorageDriver, &out.DindStorageDriver
		*out = new(string)
		**out = **in
	}
	if in.DisablePortCheck != nil {
		in, out := &in.DisablePortCheck, &out.DisablePortCheck
		*out = new(bool)
		**out = **in
	}
	if in.IgnoreDockerVersion != nil {
		in, out := &in.IgnoreDockerVersion, &out.IgnoreDockerVersion
		*out = new(bool)
		**out = **in
	}
	if in.Ingress != nil {
		in, out := &in.Ingress, &out.Ingress
		*out = make([]IngressParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KubernetesVersion != nil {
		in, out := &in.KubernetesVersion, &out.KubernetesVersion
		*out = new(string)
		**out = **in
	}
	if in.Monitoring != nil {
		in, out := &in.Monitoring, &out.Monitoring
		*out = make([]MonitoringParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]ClusterNetworkParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Nodes != nil {
		in, out := &in.Nodes, &out.Nodes
		*out = make([]NodesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodesConf != nil {
		in, out := &in.NodesConf, &out.NodesConf
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrefixPath != nil {
		in, out := &in.PrefixPath, &out.PrefixPath
		*out = new(string)
		**out = **in
	}
	if in.PrivateRegistries != nil {
		in, out := &in.PrivateRegistries, &out.PrivateRegistries
		*out = make([]PrivateRegistriesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Restore != nil {
		in, out := &in.Restore, &out.Restore
		*out = make([]RestoreParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RotateCertificates != nil {
		in, out := &in.RotateCertificates, &out.RotateCertificates
		*out = make([]RotateCertificatesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSHAgentAuth != nil {
		in, out := &in.SSHAgentAuth, &out.SSHAgentAuth
		*out = new(bool)
		**out = **in
	}
	if in.SSHCertPath != nil {
		in, out := &in.SSHCertPath, &out.SSHCertPath
		*out = new(string)
		**out = **in
	}
	if in.SSHKeyPath != nil {
		in, out := &in.SSHKeyPath, &out.SSHKeyPath
		*out = new(string)
		**out = **in
	}
	if in.Services != nil {
		in, out := &in.Services, &out.Services
		*out = make([]ServicesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServicesEtcd != nil {
		in, out := &in.ServicesEtcd, &out.ServicesEtcd
		*out = make([]ServicesEtcdParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServicesKubeAPI != nil {
		in, out := &in.ServicesKubeAPI, &out.ServicesKubeAPI
		*out = make([]ServicesKubeAPIParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServicesKubeController != nil {
		in, out := &in.ServicesKubeController, &out.ServicesKubeController
		*out = make([]ServicesKubeControllerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServicesKubelet != nil {
		in, out := &in.ServicesKubelet, &out.ServicesKubelet
		*out = make([]ServicesKubeletParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServicesKubeproxy != nil {
		in, out := &in.ServicesKubeproxy, &out.ServicesKubeproxy
		*out = make([]ServicesKubeproxyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServicesScheduler != nil {
		in, out := &in.ServicesScheduler, &out.ServicesScheduler
		*out = make([]ServicesSchedulerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SystemImages != nil {
		in, out := &in.SystemImages, &out.SystemImages
		*out = make([]SystemImagesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateOnly != nil {
		in, out := &in.UpdateOnly, &out.UpdateOnly
		*out = new(bool)
		**out = **in
	}
	if in.UpgradeStrategy != nil {
		in, out := &in.UpgradeStrategy, &out.UpgradeStrategy
		*out = make([]UpgradeStrategyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterParameters.
func (in *ClusterParameters) DeepCopy() *ClusterParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSpec) DeepCopyInto(out *ClusterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSpec.
func (in *ClusterSpec) DeepCopy() *ClusterSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterStatus) DeepCopyInto(out *ClusterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterStatus.
func (in *ClusterStatus) DeepCopy() *ClusterStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigurationObservation) DeepCopyInto(out *ConfigurationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigurationObservation.
func (in *ConfigurationObservation) DeepCopy() *ConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigurationParameters) DeepCopyInto(out *ConfigurationParameters) {
	*out = *in
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
	if in.MaxBackup != nil {
		in, out := &in.MaxBackup, &out.MaxBackup
		*out = new(float64)
		**out = **in
	}
	if in.MaxSize != nil {
		in, out := &in.MaxSize, &out.MaxSize
		*out = new(float64)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigurationParameters.
func (in *ConfigurationParameters) DeepCopy() *ConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ControlPlaneHostsObservation) DeepCopyInto(out *ControlPlaneHostsObservation) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.NodeName != nil {
		in, out := &in.NodeName, &out.NodeName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ControlPlaneHostsObservation.
func (in *ControlPlaneHostsObservation) DeepCopy() *ControlPlaneHostsObservation {
	if in == nil {
		return nil
	}
	out := new(ControlPlaneHostsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ControlPlaneHostsParameters) DeepCopyInto(out *ControlPlaneHostsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ControlPlaneHostsParameters.
func (in *ControlPlaneHostsParameters) DeepCopy() *ControlPlaneHostsParameters {
	if in == nil {
		return nil
	}
	out := new(ControlPlaneHostsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSObservation) DeepCopyInto(out *DNSObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSObservation.
func (in *DNSObservation) DeepCopy() *DNSObservation {
	if in == nil {
		return nil
	}
	out := new(DNSObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSParameters) DeepCopyInto(out *DNSParameters) {
	*out = *in
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Nodelocal != nil {
		in, out := &in.Nodelocal, &out.Nodelocal
		*out = make([]NodelocalParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Provider != nil {
		in, out := &in.Provider, &out.Provider
		*out = new(string)
		**out = **in
	}
	if in.ReverseCidrs != nil {
		in, out := &in.ReverseCidrs, &out.ReverseCidrs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.UpstreamNameservers != nil {
		in, out := &in.UpstreamNameservers, &out.UpstreamNameservers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSParameters.
func (in *DNSParameters) DeepCopy() *DNSParameters {
	if in == nil {
		return nil
	}
	out := new(DNSParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskObservation) DeepCopyInto(out *DiskObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskObservation.
func (in *DiskObservation) DeepCopy() *DiskObservation {
	if in == nil {
		return nil
	}
	out := new(DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskParameters) DeepCopyInto(out *DiskParameters) {
	*out = *in
	if in.ScsiControllerType != nil {
		in, out := &in.ScsiControllerType, &out.ScsiControllerType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskParameters.
func (in *DiskParameters) DeepCopy() *DiskParameters {
	if in == nil {
		return nil
	}
	out := new(DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrainInputObservation) DeepCopyInto(out *DrainInputObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrainInputObservation.
func (in *DrainInputObservation) DeepCopy() *DrainInputObservation {
	if in == nil {
		return nil
	}
	out := new(DrainInputObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrainInputParameters) DeepCopyInto(out *DrainInputParameters) {
	*out = *in
	if in.DeleteLocalData != nil {
		in, out := &in.DeleteLocalData, &out.DeleteLocalData
		*out = new(bool)
		**out = **in
	}
	if in.Force != nil {
		in, out := &in.Force, &out.Force
		*out = new(bool)
		**out = **in
	}
	if in.GracePeriod != nil {
		in, out := &in.GracePeriod, &out.GracePeriod
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreDaemonSets != nil {
		in, out := &in.IgnoreDaemonSets, &out.IgnoreDaemonSets
		*out = new(bool)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrainInputParameters.
func (in *DrainInputParameters) DeepCopy() *DrainInputParameters {
	if in == nil {
		return nil
	}
	out := new(DrainInputParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EtcdHostsObservation) DeepCopyInto(out *EtcdHostsObservation) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.NodeName != nil {
		in, out := &in.NodeName, &out.NodeName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EtcdHostsObservation.
func (in *EtcdHostsObservation) DeepCopy() *EtcdHostsObservation {
	if in == nil {
		return nil
	}
	out := new(EtcdHostsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EtcdHostsParameters) DeepCopyInto(out *EtcdHostsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EtcdHostsParameters.
func (in *EtcdHostsParameters) DeepCopy() *EtcdHostsParameters {
	if in == nil {
		return nil
	}
	out := new(EtcdHostsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EtcdObservation) DeepCopyInto(out *EtcdObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EtcdObservation.
func (in *EtcdObservation) DeepCopy() *EtcdObservation {
	if in == nil {
		return nil
	}
	out := new(EtcdObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EtcdParameters) DeepCopyInto(out *EtcdParameters) {
	*out = *in
	if in.BackupConfig != nil {
		in, out := &in.BackupConfig, &out.BackupConfig
		*out = make([]BackupConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CACertSecretRef != nil {
		in, out := &in.CACertSecretRef, &out.CACertSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.CertSecretRef != nil {
		in, out := &in.CertSecretRef, &out.CertSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Creation != nil {
		in, out := &in.Creation, &out.Creation
		*out = new(string)
		**out = **in
	}
	if in.ExternalUrls != nil {
		in, out := &in.ExternalUrls, &out.ExternalUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExtraArgs != nil {
		in, out := &in.ExtraArgs, &out.ExtraArgs
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ExtraBinds != nil {
		in, out := &in.ExtraBinds, &out.ExtraBinds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExtraEnv != nil {
		in, out := &in.ExtraEnv, &out.ExtraEnv
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.GID != nil {
		in, out := &in.GID, &out.GID
		*out = new(float64)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.KeySecretRef != nil {
		in, out := &in.KeySecretRef, &out.KeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Retention != nil {
		in, out := &in.Retention, &out.Retention
		*out = new(string)
		**out = **in
	}
	if in.Snapshot != nil {
		in, out := &in.Snapshot, &out.Snapshot
		*out = new(bool)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EtcdParameters.
func (in *EtcdParameters) DeepCopy() *EtcdParameters {
	if in == nil {
		return nil
	}
	out := new(EtcdParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventRateLimitObservation) DeepCopyInto(out *EventRateLimitObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventRateLimitObservation.
func (in *EventRateLimitObservation) DeepCopy() *EventRateLimitObservation {
	if in == nil {
		return nil
	}
	out := new(EventRateLimitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventRateLimitParameters) DeepCopyInto(out *EventRateLimitParameters) {
	*out = *in
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventRateLimitParameters.
func (in *EventRateLimitParameters) DeepCopy() *EventRateLimitParameters {
	if in == nil {
		return nil
	}
	out := new(EventRateLimitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlannelNetworkProviderObservation) DeepCopyInto(out *FlannelNetworkProviderObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlannelNetworkProviderObservation.
func (in *FlannelNetworkProviderObservation) DeepCopy() *FlannelNetworkProviderObservation {
	if in == nil {
		return nil
	}
	out := new(FlannelNetworkProviderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlannelNetworkProviderParameters) DeepCopyInto(out *FlannelNetworkProviderParameters) {
	*out = *in
	if in.Iface != nil {
		in, out := &in.Iface, &out.Iface
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlannelNetworkProviderParameters.
func (in *FlannelNetworkProviderParameters) DeepCopy() *FlannelNetworkProviderParameters {
	if in == nil {
		return nil
	}
	out := new(FlannelNetworkProviderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalObservation) DeepCopyInto(out *GlobalObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalObservation.
func (in *GlobalObservation) DeepCopy() *GlobalObservation {
	if in == nil {
		return nil
	}
	out := new(GlobalObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalParameters) DeepCopyInto(out *GlobalParameters) {
	*out = *in
	if in.DisableSecurityGroupIngress != nil {
		in, out := &in.DisableSecurityGroupIngress, &out.DisableSecurityGroupIngress
		*out = new(bool)
		**out = **in
	}
	if in.DisableStrictZoneCheck != nil {
		in, out := &in.DisableStrictZoneCheck, &out.DisableStrictZoneCheck
		*out = new(bool)
		**out = **in
	}
	if in.ELBSecurityGroup != nil {
		in, out := &in.ELBSecurityGroup, &out.ELBSecurityGroup
		*out = new(string)
		**out = **in
	}
	if in.KubernetesClusterID != nil {
		in, out := &in.KubernetesClusterID, &out.KubernetesClusterID
		*out = new(string)
		**out = **in
	}
	if in.KubernetesClusterTag != nil {
		in, out := &in.KubernetesClusterTag, &out.KubernetesClusterTag
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.VPC != nil {
		in, out := &in.VPC, &out.VPC
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalParameters.
func (in *GlobalParameters) DeepCopy() *GlobalParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InactiveHostsObservation) DeepCopyInto(out *InactiveHostsObservation) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.NodeName != nil {
		in, out := &in.NodeName, &out.NodeName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InactiveHostsObservation.
func (in *InactiveHostsObservation) DeepCopy() *InactiveHostsObservation {
	if in == nil {
		return nil
	}
	out := new(InactiveHostsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InactiveHostsParameters) DeepCopyInto(out *InactiveHostsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InactiveHostsParameters.
func (in *InactiveHostsParameters) DeepCopy() *InactiveHostsParameters {
	if in == nil {
		return nil
	}
	out := new(InactiveHostsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressObservation) DeepCopyInto(out *IngressObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressObservation.
func (in *IngressObservation) DeepCopy() *IngressObservation {
	if in == nil {
		return nil
	}
	out := new(IngressObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressParameters) DeepCopyInto(out *IngressParameters) {
	*out = *in
	if in.DNSPolicy != nil {
		in, out := &in.DNSPolicy, &out.DNSPolicy
		*out = new(string)
		**out = **in
	}
	if in.DefaultBackend != nil {
		in, out := &in.DefaultBackend, &out.DefaultBackend
		*out = new(bool)
		**out = **in
	}
	if in.ExtraArgs != nil {
		in, out := &in.ExtraArgs, &out.ExtraArgs
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HTTPPort != nil {
		in, out := &in.HTTPPort, &out.HTTPPort
		*out = new(float64)
		**out = **in
	}
	if in.HTTPSPort != nil {
		in, out := &in.HTTPSPort, &out.HTTPSPort
		*out = new(float64)
		**out = **in
	}
	if in.NetworkMode != nil {
		in, out := &in.NetworkMode, &out.NetworkMode
		*out = new(string)
		**out = **in
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Provider != nil {
		in, out := &in.Provider, &out.Provider
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressParameters.
func (in *IngressParameters) DeepCopy() *IngressParameters {
	if in == nil {
		return nil
	}
	out := new(IngressParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeAPIObservation) DeepCopyInto(out *KubeAPIObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeAPIObservation.
func (in *KubeAPIObservation) DeepCopy() *KubeAPIObservation {
	if in == nil {
		return nil
	}
	out := new(KubeAPIObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeAPIParameters) DeepCopyInto(out *KubeAPIParameters) {
	*out = *in
	if in.AlwaysPullImages != nil {
		in, out := &in.AlwaysPullImages, &out.AlwaysPullImages
		*out = new(bool)
		**out = **in
	}
	if in.AuditLog != nil {
		in, out := &in.AuditLog, &out.AuditLog
		*out = make([]AuditLogParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EventRateLimit != nil {
		in, out := &in.EventRateLimit, &out.EventRateLimit
		*out = make([]EventRateLimitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExtraArgs != nil {
		in, out := &in.ExtraArgs, &out.ExtraArgs
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ExtraBinds != nil {
		in, out := &in.ExtraBinds, &out.ExtraBinds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExtraEnv != nil {
		in, out := &in.ExtraEnv, &out.ExtraEnv
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.PodSecurityPolicy != nil {
		in, out := &in.PodSecurityPolicy, &out.PodSecurityPolicy
		*out = new(bool)
		**out = **in
	}
	if in.SecretsEncryptionConfig != nil {
		in, out := &in.SecretsEncryptionConfig, &out.SecretsEncryptionConfig
		*out = make([]SecretsEncryptionConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceClusterIPRange != nil {
		in, out := &in.ServiceClusterIPRange, &out.ServiceClusterIPRange
		*out = new(string)
		**out = **in
	}
	if in.ServiceNodePortRange != nil {
		in, out := &in.ServiceNodePortRange, &out.ServiceNodePortRange
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeAPIParameters.
func (in *KubeAPIParameters) DeepCopy() *KubeAPIParameters {
	if in == nil {
		return nil
	}
	out := new(KubeAPIParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeControllerObservation) DeepCopyInto(out *KubeControllerObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeControllerObservation.
func (in *KubeControllerObservation) DeepCopy() *KubeControllerObservation {
	if in == nil {
		return nil
	}
	out := new(KubeControllerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeControllerParameters) DeepCopyInto(out *KubeControllerParameters) {
	*out = *in
	if in.ClusterCidr != nil {
		in, out := &in.ClusterCidr, &out.ClusterCidr
		*out = new(string)
		**out = **in
	}
	if in.ExtraArgs != nil {
		in, out := &in.ExtraArgs, &out.ExtraArgs
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ExtraBinds != nil {
		in, out := &in.ExtraBinds, &out.ExtraBinds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExtraEnv != nil {
		in, out := &in.ExtraEnv, &out.ExtraEnv
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.ServiceClusterIPRange != nil {
		in, out := &in.ServiceClusterIPRange, &out.ServiceClusterIPRange
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeControllerParameters.
func (in *KubeControllerParameters) DeepCopy() *KubeControllerParameters {
	if in == nil {
		return nil
	}
	out := new(KubeControllerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeletObservation) DeepCopyInto(out *KubeletObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeletObservation.
func (in *KubeletObservation) DeepCopy() *KubeletObservation {
	if in == nil {
		return nil
	}
	out := new(KubeletObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeletParameters) DeepCopyInto(out *KubeletParameters) {
	*out = *in
	if in.ClusterDNSServer != nil {
		in, out := &in.ClusterDNSServer, &out.ClusterDNSServer
		*out = new(string)
		**out = **in
	}
	if in.ClusterDomain != nil {
		in, out := &in.ClusterDomain, &out.ClusterDomain
		*out = new(string)
		**out = **in
	}
	if in.ExtraArgs != nil {
		in, out := &in.ExtraArgs, &out.ExtraArgs
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ExtraBinds != nil {
		in, out := &in.ExtraBinds, &out.ExtraBinds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExtraEnv != nil {
		in, out := &in.ExtraEnv, &out.ExtraEnv
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FailSwapOn != nil {
		in, out := &in.FailSwapOn, &out.FailSwapOn
		*out = new(bool)
		**out = **in
	}
	if in.GenerateServingCertificate != nil {
		in, out := &in.GenerateServingCertificate, &out.GenerateServingCertificate
		*out = new(bool)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.InfraContainerImage != nil {
		in, out := &in.InfraContainerImage, &out.InfraContainerImage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeletParameters.
func (in *KubeletParameters) DeepCopy() *KubeletParameters {
	if in == nil {
		return nil
	}
	out := new(KubeletParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeproxyObservation) DeepCopyInto(out *KubeproxyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeproxyObservation.
func (in *KubeproxyObservation) DeepCopy() *KubeproxyObservation {
	if in == nil {
		return nil
	}
	out := new(KubeproxyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeproxyParameters) DeepCopyInto(out *KubeproxyParameters) {
	*out = *in
	if in.ExtraArgs != nil {
		in, out := &in.ExtraArgs, &out.ExtraArgs
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ExtraBinds != nil {
		in, out := &in.ExtraBinds, &out.ExtraBinds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExtraEnv != nil {
		in, out := &in.ExtraEnv, &out.ExtraEnv
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeproxyParameters.
func (in *KubeproxyParameters) DeepCopy() *KubeproxyParameters {
	if in == nil {
		return nil
	}
	out := new(KubeproxyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerObservation) DeepCopyInto(out *LoadBalancerObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerObservation.
func (in *LoadBalancerObservation) DeepCopy() *LoadBalancerObservation {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerParameters) DeepCopyInto(out *LoadBalancerParameters) {
	*out = *in
	if in.CreateMonitor != nil {
		in, out := &in.CreateMonitor, &out.CreateMonitor
		*out = new(bool)
		**out = **in
	}
	if in.FloatingNetworkID != nil {
		in, out := &in.FloatingNetworkID, &out.FloatingNetworkID
		*out = new(string)
		**out = **in
	}
	if in.LBMethod != nil {
		in, out := &in.LBMethod, &out.LBMethod
		*out = new(string)
		**out = **in
	}
	if in.LBProvider != nil {
		in, out := &in.LBProvider, &out.LBProvider
		*out = new(string)
		**out = **in
	}
	if in.LBVersion != nil {
		in, out := &in.LBVersion, &out.LBVersion
		*out = new(string)
		**out = **in
	}
	if in.ManageSecurityGroups != nil {
		in, out := &in.ManageSecurityGroups, &out.ManageSecurityGroups
		*out = new(bool)
		**out = **in
	}
	if in.MonitorDelay != nil {
		in, out := &in.MonitorDelay, &out.MonitorDelay
		*out = new(string)
		**out = **in
	}
	if in.MonitorMaxRetries != nil {
		in, out := &in.MonitorMaxRetries, &out.MonitorMaxRetries
		*out = new(float64)
		**out = **in
	}
	if in.MonitorTimeout != nil {
		in, out := &in.MonitorTimeout, &out.MonitorTimeout
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.UseOctavia != nil {
		in, out := &in.UseOctavia, &out.UseOctavia
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerParameters.
func (in *LoadBalancerParameters) DeepCopy() *LoadBalancerParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataObservation) DeepCopyInto(out *MetadataObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataObservation.
func (in *MetadataObservation) DeepCopy() *MetadataObservation {
	if in == nil {
		return nil
	}
	out := new(MetadataObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataParameters) DeepCopyInto(out *MetadataParameters) {
	*out = *in
	if in.RequestTimeout != nil {
		in, out := &in.RequestTimeout, &out.RequestTimeout
		*out = new(float64)
		**out = **in
	}
	if in.SearchOrder != nil {
		in, out := &in.SearchOrder, &out.SearchOrder
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataParameters.
func (in *MetadataParameters) DeepCopy() *MetadataParameters {
	if in == nil {
		return nil
	}
	out := new(MetadataParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringObservation) DeepCopyInto(out *MonitoringObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringObservation.
func (in *MonitoringObservation) DeepCopy() *MonitoringObservation {
	if in == nil {
		return nil
	}
	out := new(MonitoringObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringParameters) DeepCopyInto(out *MonitoringParameters) {
	*out = *in
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Provider != nil {
		in, out := &in.Provider, &out.Provider
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringParameters.
func (in *MonitoringParameters) DeepCopy() *MonitoringParameters {
	if in == nil {
		return nil
	}
	out := new(MonitoringParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkObservation) DeepCopyInto(out *NetworkObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkObservation.
func (in *NetworkObservation) DeepCopy() *NetworkObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkParameters) DeepCopyInto(out *NetworkParameters) {
	*out = *in
	if in.PublicNetwork != nil {
		in, out := &in.PublicNetwork, &out.PublicNetwork
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkParameters.
func (in *NetworkParameters) DeepCopy() *NetworkParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodelocalObservation) DeepCopyInto(out *NodelocalObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodelocalObservation.
func (in *NodelocalObservation) DeepCopy() *NodelocalObservation {
	if in == nil {
		return nil
	}
	out := new(NodelocalObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodelocalParameters) DeepCopyInto(out *NodelocalParameters) {
	*out = *in
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodelocalParameters.
func (in *NodelocalParameters) DeepCopy() *NodelocalParameters {
	if in == nil {
		return nil
	}
	out := new(NodelocalParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodesObservation) DeepCopyInto(out *NodesObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodesObservation.
func (in *NodesObservation) DeepCopy() *NodesObservation {
	if in == nil {
		return nil
	}
	out := new(NodesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodesParameters) DeepCopyInto(out *NodesParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.DockerSocket != nil {
		in, out := &in.DockerSocket, &out.DockerSocket
		*out = new(string)
		**out = **in
	}
	if in.HostnameOverride != nil {
		in, out := &in.HostnameOverride, &out.HostnameOverride
		*out = new(string)
		**out = **in
	}
	if in.InternalAddress != nil {
		in, out := &in.InternalAddress, &out.InternalAddress
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NodeName != nil {
		in, out := &in.NodeName, &out.NodeName
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = new(string)
		**out = **in
	}
	if in.SSHAgentAuth != nil {
		in, out := &in.SSHAgentAuth, &out.SSHAgentAuth
		*out = new(bool)
		**out = **in
	}
	if in.SSHCertPath != nil {
		in, out := &in.SSHCertPath, &out.SSHCertPath
		*out = new(string)
		**out = **in
	}
	if in.SSHCertSecretRef != nil {
		in, out := &in.SSHCertSecretRef, &out.SSHCertSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SSHKeyPath != nil {
		in, out := &in.SSHKeyPath, &out.SSHKeyPath
		*out = new(string)
		**out = **in
	}
	if in.SSHKeySecretRef != nil {
		in, out := &in.SSHKeySecretRef, &out.SSHKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]TaintsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	out.UserSecretRef = in.UserSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodesParameters.
func (in *NodesParameters) DeepCopy() *NodesParameters {
	if in == nil {
		return nil
	}
	out := new(NodesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackCloudConfigGlobalObservation) DeepCopyInto(out *OpenstackCloudConfigGlobalObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackCloudConfigGlobalObservation.
func (in *OpenstackCloudConfigGlobalObservation) DeepCopy() *OpenstackCloudConfigGlobalObservation {
	if in == nil {
		return nil
	}
	out := new(OpenstackCloudConfigGlobalObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackCloudConfigGlobalParameters) DeepCopyInto(out *OpenstackCloudConfigGlobalParameters) {
	*out = *in
	if in.AuthURL != nil {
		in, out := &in.AuthURL, &out.AuthURL
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.DomainIDSecretRef != nil {
		in, out := &in.DomainIDSecretRef, &out.DomainIDSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.TenantIDSecretRef != nil {
		in, out := &in.TenantIDSecretRef, &out.TenantIDSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.TenantName != nil {
		in, out := &in.TenantName, &out.TenantName
		*out = new(string)
		**out = **in
	}
	if in.TrustIDSecretRef != nil {
		in, out := &in.TrustIDSecretRef, &out.TrustIDSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.UserIDSecretRef != nil {
		in, out := &in.UserIDSecretRef, &out.UserIDSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackCloudConfigGlobalParameters.
func (in *OpenstackCloudConfigGlobalParameters) DeepCopy() *OpenstackCloudConfigGlobalParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackCloudConfigGlobalParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackCloudConfigObservation) DeepCopyInto(out *OpenstackCloudConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackCloudConfigObservation.
func (in *OpenstackCloudConfigObservation) DeepCopy() *OpenstackCloudConfigObservation {
	if in == nil {
		return nil
	}
	out := new(OpenstackCloudConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackCloudConfigParameters) DeepCopyInto(out *OpenstackCloudConfigParameters) {
	*out = *in
	if in.BlockStorage != nil {
		in, out := &in.BlockStorage, &out.BlockStorage
		*out = make([]BlockStorageParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Global != nil {
		in, out := &in.Global, &out.Global
		*out = make([]OpenstackCloudConfigGlobalParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancer != nil {
		in, out := &in.LoadBalancer, &out.LoadBalancer
		*out = make([]LoadBalancerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make([]MetadataParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Route != nil {
		in, out := &in.Route, &out.Route
		*out = make([]RouteParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackCloudConfigParameters.
func (in *OpenstackCloudConfigParameters) DeepCopy() *OpenstackCloudConfigParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackCloudConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackCloudProviderBlockStorageObservation) DeepCopyInto(out *OpenstackCloudProviderBlockStorageObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackCloudProviderBlockStorageObservation.
func (in *OpenstackCloudProviderBlockStorageObservation) DeepCopy() *OpenstackCloudProviderBlockStorageObservation {
	if in == nil {
		return nil
	}
	out := new(OpenstackCloudProviderBlockStorageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackCloudProviderBlockStorageParameters) DeepCopyInto(out *OpenstackCloudProviderBlockStorageParameters) {
	*out = *in
	if in.BsVersion != nil {
		in, out := &in.BsVersion, &out.BsVersion
		*out = new(string)
		**out = **in
	}
	if in.IgnoreVolumeAz != nil {
		in, out := &in.IgnoreVolumeAz, &out.IgnoreVolumeAz
		*out = new(bool)
		**out = **in
	}
	if in.TrustDevicePath != nil {
		in, out := &in.TrustDevicePath, &out.TrustDevicePath
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackCloudProviderBlockStorageParameters.
func (in *OpenstackCloudProviderBlockStorageParameters) DeepCopy() *OpenstackCloudProviderBlockStorageParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackCloudProviderBlockStorageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackCloudProviderGlobalObservation) DeepCopyInto(out *OpenstackCloudProviderGlobalObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackCloudProviderGlobalObservation.
func (in *OpenstackCloudProviderGlobalObservation) DeepCopy() *OpenstackCloudProviderGlobalObservation {
	if in == nil {
		return nil
	}
	out := new(OpenstackCloudProviderGlobalObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackCloudProviderGlobalParameters) DeepCopyInto(out *OpenstackCloudProviderGlobalParameters) {
	*out = *in
	if in.AuthURL != nil {
		in, out := &in.AuthURL, &out.AuthURL
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.DomainIDSecretRef != nil {
		in, out := &in.DomainIDSecretRef, &out.DomainIDSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.TenantIDSecretRef != nil {
		in, out := &in.TenantIDSecretRef, &out.TenantIDSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.TenantName != nil {
		in, out := &in.TenantName, &out.TenantName
		*out = new(string)
		**out = **in
	}
	if in.TrustIDSecretRef != nil {
		in, out := &in.TrustIDSecretRef, &out.TrustIDSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.UserIDSecretRef != nil {
		in, out := &in.UserIDSecretRef, &out.UserIDSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackCloudProviderGlobalParameters.
func (in *OpenstackCloudProviderGlobalParameters) DeepCopy() *OpenstackCloudProviderGlobalParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackCloudProviderGlobalParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackCloudProviderLoadBalancerObservation) DeepCopyInto(out *OpenstackCloudProviderLoadBalancerObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackCloudProviderLoadBalancerObservation.
func (in *OpenstackCloudProviderLoadBalancerObservation) DeepCopy() *OpenstackCloudProviderLoadBalancerObservation {
	if in == nil {
		return nil
	}
	out := new(OpenstackCloudProviderLoadBalancerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackCloudProviderLoadBalancerParameters) DeepCopyInto(out *OpenstackCloudProviderLoadBalancerParameters) {
	*out = *in
	if in.CreateMonitor != nil {
		in, out := &in.CreateMonitor, &out.CreateMonitor
		*out = new(bool)
		**out = **in
	}
	if in.FloatingNetworkID != nil {
		in, out := &in.FloatingNetworkID, &out.FloatingNetworkID
		*out = new(string)
		**out = **in
	}
	if in.LBMethod != nil {
		in, out := &in.LBMethod, &out.LBMethod
		*out = new(string)
		**out = **in
	}
	if in.LBProvider != nil {
		in, out := &in.LBProvider, &out.LBProvider
		*out = new(string)
		**out = **in
	}
	if in.LBVersion != nil {
		in, out := &in.LBVersion, &out.LBVersion
		*out = new(string)
		**out = **in
	}
	if in.ManageSecurityGroups != nil {
		in, out := &in.ManageSecurityGroups, &out.ManageSecurityGroups
		*out = new(bool)
		**out = **in
	}
	if in.MonitorDelay != nil {
		in, out := &in.MonitorDelay, &out.MonitorDelay
		*out = new(string)
		**out = **in
	}
	if in.MonitorMaxRetries != nil {
		in, out := &in.MonitorMaxRetries, &out.MonitorMaxRetries
		*out = new(float64)
		**out = **in
	}
	if in.MonitorTimeout != nil {
		in, out := &in.MonitorTimeout, &out.MonitorTimeout
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.UseOctavia != nil {
		in, out := &in.UseOctavia, &out.UseOctavia
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackCloudProviderLoadBalancerParameters.
func (in *OpenstackCloudProviderLoadBalancerParameters) DeepCopy() *OpenstackCloudProviderLoadBalancerParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackCloudProviderLoadBalancerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackCloudProviderMetadataObservation) DeepCopyInto(out *OpenstackCloudProviderMetadataObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackCloudProviderMetadataObservation.
func (in *OpenstackCloudProviderMetadataObservation) DeepCopy() *OpenstackCloudProviderMetadataObservation {
	if in == nil {
		return nil
	}
	out := new(OpenstackCloudProviderMetadataObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackCloudProviderMetadataParameters) DeepCopyInto(out *OpenstackCloudProviderMetadataParameters) {
	*out = *in
	if in.RequestTimeout != nil {
		in, out := &in.RequestTimeout, &out.RequestTimeout
		*out = new(float64)
		**out = **in
	}
	if in.SearchOrder != nil {
		in, out := &in.SearchOrder, &out.SearchOrder
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackCloudProviderMetadataParameters.
func (in *OpenstackCloudProviderMetadataParameters) DeepCopy() *OpenstackCloudProviderMetadataParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackCloudProviderMetadataParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackCloudProviderObservation) DeepCopyInto(out *OpenstackCloudProviderObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackCloudProviderObservation.
func (in *OpenstackCloudProviderObservation) DeepCopy() *OpenstackCloudProviderObservation {
	if in == nil {
		return nil
	}
	out := new(OpenstackCloudProviderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackCloudProviderParameters) DeepCopyInto(out *OpenstackCloudProviderParameters) {
	*out = *in
	if in.BlockStorage != nil {
		in, out := &in.BlockStorage, &out.BlockStorage
		*out = make([]OpenstackCloudProviderBlockStorageParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Global != nil {
		in, out := &in.Global, &out.Global
		*out = make([]OpenstackCloudProviderGlobalParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancer != nil {
		in, out := &in.LoadBalancer, &out.LoadBalancer
		*out = make([]OpenstackCloudProviderLoadBalancerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make([]OpenstackCloudProviderMetadataParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Route != nil {
		in, out := &in.Route, &out.Route
		*out = make([]OpenstackCloudProviderRouteParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackCloudProviderParameters.
func (in *OpenstackCloudProviderParameters) DeepCopy() *OpenstackCloudProviderParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackCloudProviderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackCloudProviderRouteObservation) DeepCopyInto(out *OpenstackCloudProviderRouteObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackCloudProviderRouteObservation.
func (in *OpenstackCloudProviderRouteObservation) DeepCopy() *OpenstackCloudProviderRouteObservation {
	if in == nil {
		return nil
	}
	out := new(OpenstackCloudProviderRouteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackCloudProviderRouteParameters) DeepCopyInto(out *OpenstackCloudProviderRouteParameters) {
	*out = *in
	if in.RouterID != nil {
		in, out := &in.RouterID, &out.RouterID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackCloudProviderRouteParameters.
func (in *OpenstackCloudProviderRouteParameters) DeepCopy() *OpenstackCloudProviderRouteParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackCloudProviderRouteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateRegistriesObservation) DeepCopyInto(out *PrivateRegistriesObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateRegistriesObservation.
func (in *PrivateRegistriesObservation) DeepCopy() *PrivateRegistriesObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateRegistriesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateRegistriesParameters) DeepCopyInto(out *PrivateRegistriesParameters) {
	*out = *in
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.UserSecretRef != nil {
		in, out := &in.UserSecretRef, &out.UserSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateRegistriesParameters.
func (in *PrivateRegistriesParameters) DeepCopy() *PrivateRegistriesParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateRegistriesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestoreObservation) DeepCopyInto(out *RestoreObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestoreObservation.
func (in *RestoreObservation) DeepCopy() *RestoreObservation {
	if in == nil {
		return nil
	}
	out := new(RestoreObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestoreParameters) DeepCopyInto(out *RestoreParameters) {
	*out = *in
	if in.Restore != nil {
		in, out := &in.Restore, &out.Restore
		*out = new(bool)
		**out = **in
	}
	if in.SnapshotName != nil {
		in, out := &in.SnapshotName, &out.SnapshotName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestoreParameters.
func (in *RestoreParameters) DeepCopy() *RestoreParameters {
	if in == nil {
		return nil
	}
	out := new(RestoreParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RotateCertificatesObservation) DeepCopyInto(out *RotateCertificatesObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RotateCertificatesObservation.
func (in *RotateCertificatesObservation) DeepCopy() *RotateCertificatesObservation {
	if in == nil {
		return nil
	}
	out := new(RotateCertificatesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RotateCertificatesParameters) DeepCopyInto(out *RotateCertificatesParameters) {
	*out = *in
	if in.CACertificates != nil {
		in, out := &in.CACertificates, &out.CACertificates
		*out = new(bool)
		**out = **in
	}
	if in.Services != nil {
		in, out := &in.Services, &out.Services
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RotateCertificatesParameters.
func (in *RotateCertificatesParameters) DeepCopy() *RotateCertificatesParameters {
	if in == nil {
		return nil
	}
	out := new(RotateCertificatesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteObservation) DeepCopyInto(out *RouteObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteObservation.
func (in *RouteObservation) DeepCopy() *RouteObservation {
	if in == nil {
		return nil
	}
	out := new(RouteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteParameters) DeepCopyInto(out *RouteParameters) {
	*out = *in
	if in.RouterID != nil {
		in, out := &in.RouterID, &out.RouterID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteParameters.
func (in *RouteParameters) DeepCopy() *RouteParameters {
	if in == nil {
		return nil
	}
	out := new(RouteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunningSystemImagesObservation) DeepCopyInto(out *RunningSystemImagesObservation) {
	*out = *in
	if in.AciCniDeployContainer != nil {
		in, out := &in.AciCniDeployContainer, &out.AciCniDeployContainer
		*out = new(string)
		**out = **in
	}
	if in.AciControllerContainer != nil {
		in, out := &in.AciControllerContainer, &out.AciControllerContainer
		*out = new(string)
		**out = **in
	}
	if in.AciHostContainer != nil {
		in, out := &in.AciHostContainer, &out.AciHostContainer
		*out = new(string)
		**out = **in
	}
	if in.AciMcastContainer != nil {
		in, out := &in.AciMcastContainer, &out.AciMcastContainer
		*out = new(string)
		**out = **in
	}
	if in.AciOpflexContainer != nil {
		in, out := &in.AciOpflexContainer, &out.AciOpflexContainer
		*out = new(string)
		**out = **in
	}
	if in.AciOvsContainer != nil {
		in, out := &in.AciOvsContainer, &out.AciOvsContainer
		*out = new(string)
		**out = **in
	}
	if in.Alpine != nil {
		in, out := &in.Alpine, &out.Alpine
		*out = new(string)
		**out = **in
	}
	if in.CalicoCni != nil {
		in, out := &in.CalicoCni, &out.CalicoCni
		*out = new(string)
		**out = **in
	}
	if in.CalicoControllers != nil {
		in, out := &in.CalicoControllers, &out.CalicoControllers
		*out = new(string)
		**out = **in
	}
	if in.CalicoCtl != nil {
		in, out := &in.CalicoCtl, &out.CalicoCtl
		*out = new(string)
		**out = **in
	}
	if in.CalicoFlexVol != nil {
		in, out := &in.CalicoFlexVol, &out.CalicoFlexVol
		*out = new(string)
		**out = **in
	}
	if in.CalicoNode != nil {
		in, out := &in.CalicoNode, &out.CalicoNode
		*out = new(string)
		**out = **in
	}
	if in.CanalCni != nil {
		in, out := &in.CanalCni, &out.CanalCni
		*out = new(string)
		**out = **in
	}
	if in.CanalFlannel != nil {
		in, out := &in.CanalFlannel, &out.CanalFlannel
		*out = new(string)
		**out = **in
	}
	if in.CanalFlexVol != nil {
		in, out := &in.CanalFlexVol, &out.CanalFlexVol
		*out = new(string)
		**out = **in
	}
	if in.CanalNode != nil {
		in, out := &in.CanalNode, &out.CanalNode
		*out = new(string)
		**out = **in
	}
	if in.CertDownloader != nil {
		in, out := &in.CertDownloader, &out.CertDownloader
		*out = new(string)
		**out = **in
	}
	if in.Coredns != nil {
		in, out := &in.Coredns, &out.Coredns
		*out = new(string)
		**out = **in
	}
	if in.CorednsAutoscaler != nil {
		in, out := &in.CorednsAutoscaler, &out.CorednsAutoscaler
		*out = new(string)
		**out = **in
	}
	if in.Dnsmasq != nil {
		in, out := &in.Dnsmasq, &out.Dnsmasq
		*out = new(string)
		**out = **in
	}
	if in.Etcd != nil {
		in, out := &in.Etcd, &out.Etcd
		*out = new(string)
		**out = **in
	}
	if in.Flannel != nil {
		in, out := &in.Flannel, &out.Flannel
		*out = new(string)
		**out = **in
	}
	if in.FlannelCni != nil {
		in, out := &in.FlannelCni, &out.FlannelCni
		*out = new(string)
		**out = **in
	}
	if in.Ingress != nil {
		in, out := &in.Ingress, &out.Ingress
		*out = new(string)
		**out = **in
	}
	if in.IngressBackend != nil {
		in, out := &in.IngressBackend, &out.IngressBackend
		*out = new(string)
		**out = **in
	}
	if in.KubeDNS != nil {
		in, out := &in.KubeDNS, &out.KubeDNS
		*out = new(string)
		**out = **in
	}
	if in.KubeDNSAutoscaler != nil {
		in, out := &in.KubeDNSAutoscaler, &out.KubeDNSAutoscaler
		*out = new(string)
		**out = **in
	}
	if in.KubeDNSSidecar != nil {
		in, out := &in.KubeDNSSidecar, &out.KubeDNSSidecar
		*out = new(string)
		**out = **in
	}
	if in.Kubernetes != nil {
		in, out := &in.Kubernetes, &out.Kubernetes
		*out = new(string)
		**out = **in
	}
	if in.KubernetesServicesSidecar != nil {
		in, out := &in.KubernetesServicesSidecar, &out.KubernetesServicesSidecar
		*out = new(string)
		**out = **in
	}
	if in.MetricsServer != nil {
		in, out := &in.MetricsServer, &out.MetricsServer
		*out = new(string)
		**out = **in
	}
	if in.NginxProxy != nil {
		in, out := &in.NginxProxy, &out.NginxProxy
		*out = new(string)
		**out = **in
	}
	if in.Nodelocal != nil {
		in, out := &in.Nodelocal, &out.Nodelocal
		*out = new(string)
		**out = **in
	}
	if in.PodInfraContainer != nil {
		in, out := &in.PodInfraContainer, &out.PodInfraContainer
		*out = new(string)
		**out = **in
	}
	if in.WeaveCni != nil {
		in, out := &in.WeaveCni, &out.WeaveCni
		*out = new(string)
		**out = **in
	}
	if in.WeaveNode != nil {
		in, out := &in.WeaveNode, &out.WeaveNode
		*out = new(string)
		**out = **in
	}
	if in.WindowsPodInfraContainer != nil {
		in, out := &in.WindowsPodInfraContainer, &out.WindowsPodInfraContainer
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunningSystemImagesObservation.
func (in *RunningSystemImagesObservation) DeepCopy() *RunningSystemImagesObservation {
	if in == nil {
		return nil
	}
	out := new(RunningSystemImagesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunningSystemImagesParameters) DeepCopyInto(out *RunningSystemImagesParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunningSystemImagesParameters.
func (in *RunningSystemImagesParameters) DeepCopy() *RunningSystemImagesParameters {
	if in == nil {
		return nil
	}
	out := new(RunningSystemImagesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3BackupConfigObservation) DeepCopyInto(out *S3BackupConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3BackupConfigObservation.
func (in *S3BackupConfigObservation) DeepCopy() *S3BackupConfigObservation {
	if in == nil {
		return nil
	}
	out := new(S3BackupConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3BackupConfigParameters) DeepCopyInto(out *S3BackupConfigParameters) {
	*out = *in
	if in.AccessKeySecretRef != nil {
		in, out := &in.AccessKeySecretRef, &out.AccessKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.CustomCA != nil {
		in, out := &in.CustomCA, &out.CustomCA
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SecretKeySecretRef != nil {
		in, out := &in.SecretKeySecretRef, &out.SecretKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3BackupConfigParameters.
func (in *S3BackupConfigParameters) DeepCopy() *S3BackupConfigParameters {
	if in == nil {
		return nil
	}
	out := new(S3BackupConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulerObservation) DeepCopyInto(out *SchedulerObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulerObservation.
func (in *SchedulerObservation) DeepCopy() *SchedulerObservation {
	if in == nil {
		return nil
	}
	out := new(SchedulerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulerParameters) DeepCopyInto(out *SchedulerParameters) {
	*out = *in
	if in.ExtraArgs != nil {
		in, out := &in.ExtraArgs, &out.ExtraArgs
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ExtraBinds != nil {
		in, out := &in.ExtraBinds, &out.ExtraBinds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExtraEnv != nil {
		in, out := &in.ExtraEnv, &out.ExtraEnv
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulerParameters.
func (in *SchedulerParameters) DeepCopy() *SchedulerParameters {
	if in == nil {
		return nil
	}
	out := new(SchedulerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretsEncryptionConfigObservation) DeepCopyInto(out *SecretsEncryptionConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretsEncryptionConfigObservation.
func (in *SecretsEncryptionConfigObservation) DeepCopy() *SecretsEncryptionConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SecretsEncryptionConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretsEncryptionConfigParameters) DeepCopyInto(out *SecretsEncryptionConfigParameters) {
	*out = *in
	if in.CustomConfig != nil {
		in, out := &in.CustomConfig, &out.CustomConfig
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretsEncryptionConfigParameters.
func (in *SecretsEncryptionConfigParameters) DeepCopy() *SecretsEncryptionConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SecretsEncryptionConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceOverrideObservation) DeepCopyInto(out *ServiceOverrideObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceOverrideObservation.
func (in *ServiceOverrideObservation) DeepCopy() *ServiceOverrideObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceOverrideObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceOverrideParameters) DeepCopyInto(out *ServiceOverrideParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.SigningMethod != nil {
		in, out := &in.SigningMethod, &out.SigningMethod
		*out = new(string)
		**out = **in
	}
	if in.SigningName != nil {
		in, out := &in.SigningName, &out.SigningName
		*out = new(string)
		**out = **in
	}
	if in.SigningRegion != nil {
		in, out := &in.SigningRegion, &out.SigningRegion
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceOverrideParameters.
func (in *ServiceOverrideParameters) DeepCopy() *ServiceOverrideParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceOverrideParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesEtcdBackupConfigObservation) DeepCopyInto(out *ServicesEtcdBackupConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesEtcdBackupConfigObservation.
func (in *ServicesEtcdBackupConfigObservation) DeepCopy() *ServicesEtcdBackupConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ServicesEtcdBackupConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesEtcdBackupConfigParameters) DeepCopyInto(out *ServicesEtcdBackupConfigParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IntervalHours != nil {
		in, out := &in.IntervalHours, &out.IntervalHours
		*out = new(float64)
		**out = **in
	}
	if in.Retention != nil {
		in, out := &in.Retention, &out.Retention
		*out = new(float64)
		**out = **in
	}
	if in.S3BackupConfig != nil {
		in, out := &in.S3BackupConfig, &out.S3BackupConfig
		*out = make([]BackupConfigS3BackupConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SafeTimestamp != nil {
		in, out := &in.SafeTimestamp, &out.SafeTimestamp
		*out = new(bool)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesEtcdBackupConfigParameters.
func (in *ServicesEtcdBackupConfigParameters) DeepCopy() *ServicesEtcdBackupConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ServicesEtcdBackupConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesEtcdObservation) DeepCopyInto(out *ServicesEtcdObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesEtcdObservation.
func (in *ServicesEtcdObservation) DeepCopy() *ServicesEtcdObservation {
	if in == nil {
		return nil
	}
	out := new(ServicesEtcdObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesEtcdParameters) DeepCopyInto(out *ServicesEtcdParameters) {
	*out = *in
	if in.BackupConfig != nil {
		in, out := &in.BackupConfig, &out.BackupConfig
		*out = make([]ServicesEtcdBackupConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CACertSecretRef != nil {
		in, out := &in.CACertSecretRef, &out.CACertSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.CertSecretRef != nil {
		in, out := &in.CertSecretRef, &out.CertSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Creation != nil {
		in, out := &in.Creation, &out.Creation
		*out = new(string)
		**out = **in
	}
	if in.ExternalUrls != nil {
		in, out := &in.ExternalUrls, &out.ExternalUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExtraArgs != nil {
		in, out := &in.ExtraArgs, &out.ExtraArgs
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ExtraBinds != nil {
		in, out := &in.ExtraBinds, &out.ExtraBinds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExtraEnv != nil {
		in, out := &in.ExtraEnv, &out.ExtraEnv
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.GID != nil {
		in, out := &in.GID, &out.GID
		*out = new(float64)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.KeySecretRef != nil {
		in, out := &in.KeySecretRef, &out.KeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Retention != nil {
		in, out := &in.Retention, &out.Retention
		*out = new(string)
		**out = **in
	}
	if in.Snapshot != nil {
		in, out := &in.Snapshot, &out.Snapshot
		*out = new(bool)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesEtcdParameters.
func (in *ServicesEtcdParameters) DeepCopy() *ServicesEtcdParameters {
	if in == nil {
		return nil
	}
	out := new(ServicesEtcdParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesKubeAPIAuditLogObservation) DeepCopyInto(out *ServicesKubeAPIAuditLogObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesKubeAPIAuditLogObservation.
func (in *ServicesKubeAPIAuditLogObservation) DeepCopy() *ServicesKubeAPIAuditLogObservation {
	if in == nil {
		return nil
	}
	out := new(ServicesKubeAPIAuditLogObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesKubeAPIAuditLogParameters) DeepCopyInto(out *ServicesKubeAPIAuditLogParameters) {
	*out = *in
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make([]AuditLogConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesKubeAPIAuditLogParameters.
func (in *ServicesKubeAPIAuditLogParameters) DeepCopy() *ServicesKubeAPIAuditLogParameters {
	if in == nil {
		return nil
	}
	out := new(ServicesKubeAPIAuditLogParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesKubeAPIEventRateLimitObservation) DeepCopyInto(out *ServicesKubeAPIEventRateLimitObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesKubeAPIEventRateLimitObservation.
func (in *ServicesKubeAPIEventRateLimitObservation) DeepCopy() *ServicesKubeAPIEventRateLimitObservation {
	if in == nil {
		return nil
	}
	out := new(ServicesKubeAPIEventRateLimitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesKubeAPIEventRateLimitParameters) DeepCopyInto(out *ServicesKubeAPIEventRateLimitParameters) {
	*out = *in
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesKubeAPIEventRateLimitParameters.
func (in *ServicesKubeAPIEventRateLimitParameters) DeepCopy() *ServicesKubeAPIEventRateLimitParameters {
	if in == nil {
		return nil
	}
	out := new(ServicesKubeAPIEventRateLimitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesKubeAPIObservation) DeepCopyInto(out *ServicesKubeAPIObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesKubeAPIObservation.
func (in *ServicesKubeAPIObservation) DeepCopy() *ServicesKubeAPIObservation {
	if in == nil {
		return nil
	}
	out := new(ServicesKubeAPIObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesKubeAPIParameters) DeepCopyInto(out *ServicesKubeAPIParameters) {
	*out = *in
	if in.AlwaysPullImages != nil {
		in, out := &in.AlwaysPullImages, &out.AlwaysPullImages
		*out = new(bool)
		**out = **in
	}
	if in.AuditLog != nil {
		in, out := &in.AuditLog, &out.AuditLog
		*out = make([]ServicesKubeAPIAuditLogParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EventRateLimit != nil {
		in, out := &in.EventRateLimit, &out.EventRateLimit
		*out = make([]ServicesKubeAPIEventRateLimitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExtraArgs != nil {
		in, out := &in.ExtraArgs, &out.ExtraArgs
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ExtraBinds != nil {
		in, out := &in.ExtraBinds, &out.ExtraBinds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExtraEnv != nil {
		in, out := &in.ExtraEnv, &out.ExtraEnv
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.PodSecurityPolicy != nil {
		in, out := &in.PodSecurityPolicy, &out.PodSecurityPolicy
		*out = new(bool)
		**out = **in
	}
	if in.SecretsEncryptionConfig != nil {
		in, out := &in.SecretsEncryptionConfig, &out.SecretsEncryptionConfig
		*out = make([]ServicesKubeAPISecretsEncryptionConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceClusterIPRange != nil {
		in, out := &in.ServiceClusterIPRange, &out.ServiceClusterIPRange
		*out = new(string)
		**out = **in
	}
	if in.ServiceNodePortRange != nil {
		in, out := &in.ServiceNodePortRange, &out.ServiceNodePortRange
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesKubeAPIParameters.
func (in *ServicesKubeAPIParameters) DeepCopy() *ServicesKubeAPIParameters {
	if in == nil {
		return nil
	}
	out := new(ServicesKubeAPIParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesKubeAPISecretsEncryptionConfigObservation) DeepCopyInto(out *ServicesKubeAPISecretsEncryptionConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesKubeAPISecretsEncryptionConfigObservation.
func (in *ServicesKubeAPISecretsEncryptionConfigObservation) DeepCopy() *ServicesKubeAPISecretsEncryptionConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ServicesKubeAPISecretsEncryptionConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesKubeAPISecretsEncryptionConfigParameters) DeepCopyInto(out *ServicesKubeAPISecretsEncryptionConfigParameters) {
	*out = *in
	if in.CustomConfig != nil {
		in, out := &in.CustomConfig, &out.CustomConfig
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesKubeAPISecretsEncryptionConfigParameters.
func (in *ServicesKubeAPISecretsEncryptionConfigParameters) DeepCopy() *ServicesKubeAPISecretsEncryptionConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ServicesKubeAPISecretsEncryptionConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesKubeControllerObservation) DeepCopyInto(out *ServicesKubeControllerObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesKubeControllerObservation.
func (in *ServicesKubeControllerObservation) DeepCopy() *ServicesKubeControllerObservation {
	if in == nil {
		return nil
	}
	out := new(ServicesKubeControllerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesKubeControllerParameters) DeepCopyInto(out *ServicesKubeControllerParameters) {
	*out = *in
	if in.ClusterCidr != nil {
		in, out := &in.ClusterCidr, &out.ClusterCidr
		*out = new(string)
		**out = **in
	}
	if in.ExtraArgs != nil {
		in, out := &in.ExtraArgs, &out.ExtraArgs
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ExtraBinds != nil {
		in, out := &in.ExtraBinds, &out.ExtraBinds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExtraEnv != nil {
		in, out := &in.ExtraEnv, &out.ExtraEnv
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.ServiceClusterIPRange != nil {
		in, out := &in.ServiceClusterIPRange, &out.ServiceClusterIPRange
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesKubeControllerParameters.
func (in *ServicesKubeControllerParameters) DeepCopy() *ServicesKubeControllerParameters {
	if in == nil {
		return nil
	}
	out := new(ServicesKubeControllerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesKubeletObservation) DeepCopyInto(out *ServicesKubeletObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesKubeletObservation.
func (in *ServicesKubeletObservation) DeepCopy() *ServicesKubeletObservation {
	if in == nil {
		return nil
	}
	out := new(ServicesKubeletObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesKubeletParameters) DeepCopyInto(out *ServicesKubeletParameters) {
	*out = *in
	if in.ClusterDNSServer != nil {
		in, out := &in.ClusterDNSServer, &out.ClusterDNSServer
		*out = new(string)
		**out = **in
	}
	if in.ClusterDomain != nil {
		in, out := &in.ClusterDomain, &out.ClusterDomain
		*out = new(string)
		**out = **in
	}
	if in.ExtraArgs != nil {
		in, out := &in.ExtraArgs, &out.ExtraArgs
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ExtraBinds != nil {
		in, out := &in.ExtraBinds, &out.ExtraBinds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExtraEnv != nil {
		in, out := &in.ExtraEnv, &out.ExtraEnv
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FailSwapOn != nil {
		in, out := &in.FailSwapOn, &out.FailSwapOn
		*out = new(bool)
		**out = **in
	}
	if in.GenerateServingCertificate != nil {
		in, out := &in.GenerateServingCertificate, &out.GenerateServingCertificate
		*out = new(bool)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.InfraContainerImage != nil {
		in, out := &in.InfraContainerImage, &out.InfraContainerImage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesKubeletParameters.
func (in *ServicesKubeletParameters) DeepCopy() *ServicesKubeletParameters {
	if in == nil {
		return nil
	}
	out := new(ServicesKubeletParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesKubeproxyObservation) DeepCopyInto(out *ServicesKubeproxyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesKubeproxyObservation.
func (in *ServicesKubeproxyObservation) DeepCopy() *ServicesKubeproxyObservation {
	if in == nil {
		return nil
	}
	out := new(ServicesKubeproxyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesKubeproxyParameters) DeepCopyInto(out *ServicesKubeproxyParameters) {
	*out = *in
	if in.ExtraArgs != nil {
		in, out := &in.ExtraArgs, &out.ExtraArgs
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ExtraBinds != nil {
		in, out := &in.ExtraBinds, &out.ExtraBinds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExtraEnv != nil {
		in, out := &in.ExtraEnv, &out.ExtraEnv
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesKubeproxyParameters.
func (in *ServicesKubeproxyParameters) DeepCopy() *ServicesKubeproxyParameters {
	if in == nil {
		return nil
	}
	out := new(ServicesKubeproxyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesObservation) DeepCopyInto(out *ServicesObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesObservation.
func (in *ServicesObservation) DeepCopy() *ServicesObservation {
	if in == nil {
		return nil
	}
	out := new(ServicesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesParameters) DeepCopyInto(out *ServicesParameters) {
	*out = *in
	if in.Etcd != nil {
		in, out := &in.Etcd, &out.Etcd
		*out = make([]EtcdParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KubeAPI != nil {
		in, out := &in.KubeAPI, &out.KubeAPI
		*out = make([]KubeAPIParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KubeController != nil {
		in, out := &in.KubeController, &out.KubeController
		*out = make([]KubeControllerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Kubelet != nil {
		in, out := &in.Kubelet, &out.Kubelet
		*out = make([]KubeletParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Kubeproxy != nil {
		in, out := &in.Kubeproxy, &out.Kubeproxy
		*out = make([]KubeproxyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scheduler != nil {
		in, out := &in.Scheduler, &out.Scheduler
		*out = make([]SchedulerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesParameters.
func (in *ServicesParameters) DeepCopy() *ServicesParameters {
	if in == nil {
		return nil
	}
	out := new(ServicesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesSchedulerObservation) DeepCopyInto(out *ServicesSchedulerObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesSchedulerObservation.
func (in *ServicesSchedulerObservation) DeepCopy() *ServicesSchedulerObservation {
	if in == nil {
		return nil
	}
	out := new(ServicesSchedulerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesSchedulerParameters) DeepCopyInto(out *ServicesSchedulerParameters) {
	*out = *in
	if in.ExtraArgs != nil {
		in, out := &in.ExtraArgs, &out.ExtraArgs
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ExtraBinds != nil {
		in, out := &in.ExtraBinds, &out.ExtraBinds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExtraEnv != nil {
		in, out := &in.ExtraEnv, &out.ExtraEnv
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesSchedulerParameters.
func (in *ServicesSchedulerParameters) DeepCopy() *ServicesSchedulerParameters {
	if in == nil {
		return nil
	}
	out := new(ServicesSchedulerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SystemImagesObservation) DeepCopyInto(out *SystemImagesObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SystemImagesObservation.
func (in *SystemImagesObservation) DeepCopy() *SystemImagesObservation {
	if in == nil {
		return nil
	}
	out := new(SystemImagesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SystemImagesParameters) DeepCopyInto(out *SystemImagesParameters) {
	*out = *in
	if in.AciCniDeployContainer != nil {
		in, out := &in.AciCniDeployContainer, &out.AciCniDeployContainer
		*out = new(string)
		**out = **in
	}
	if in.AciControllerContainer != nil {
		in, out := &in.AciControllerContainer, &out.AciControllerContainer
		*out = new(string)
		**out = **in
	}
	if in.AciHostContainer != nil {
		in, out := &in.AciHostContainer, &out.AciHostContainer
		*out = new(string)
		**out = **in
	}
	if in.AciMcastContainer != nil {
		in, out := &in.AciMcastContainer, &out.AciMcastContainer
		*out = new(string)
		**out = **in
	}
	if in.AciOpflexContainer != nil {
		in, out := &in.AciOpflexContainer, &out.AciOpflexContainer
		*out = new(string)
		**out = **in
	}
	if in.AciOvsContainer != nil {
		in, out := &in.AciOvsContainer, &out.AciOvsContainer
		*out = new(string)
		**out = **in
	}
	if in.Alpine != nil {
		in, out := &in.Alpine, &out.Alpine
		*out = new(string)
		**out = **in
	}
	if in.CalicoCni != nil {
		in, out := &in.CalicoCni, &out.CalicoCni
		*out = new(string)
		**out = **in
	}
	if in.CalicoControllers != nil {
		in, out := &in.CalicoControllers, &out.CalicoControllers
		*out = new(string)
		**out = **in
	}
	if in.CalicoCtl != nil {
		in, out := &in.CalicoCtl, &out.CalicoCtl
		*out = new(string)
		**out = **in
	}
	if in.CalicoFlexVol != nil {
		in, out := &in.CalicoFlexVol, &out.CalicoFlexVol
		*out = new(string)
		**out = **in
	}
	if in.CalicoNode != nil {
		in, out := &in.CalicoNode, &out.CalicoNode
		*out = new(string)
		**out = **in
	}
	if in.CanalCni != nil {
		in, out := &in.CanalCni, &out.CanalCni
		*out = new(string)
		**out = **in
	}
	if in.CanalFlannel != nil {
		in, out := &in.CanalFlannel, &out.CanalFlannel
		*out = new(string)
		**out = **in
	}
	if in.CanalFlexVol != nil {
		in, out := &in.CanalFlexVol, &out.CanalFlexVol
		*out = new(string)
		**out = **in
	}
	if in.CanalNode != nil {
		in, out := &in.CanalNode, &out.CanalNode
		*out = new(string)
		**out = **in
	}
	if in.CertDownloader != nil {
		in, out := &in.CertDownloader, &out.CertDownloader
		*out = new(string)
		**out = **in
	}
	if in.Coredns != nil {
		in, out := &in.Coredns, &out.Coredns
		*out = new(string)
		**out = **in
	}
	if in.CorednsAutoscaler != nil {
		in, out := &in.CorednsAutoscaler, &out.CorednsAutoscaler
		*out = new(string)
		**out = **in
	}
	if in.Dnsmasq != nil {
		in, out := &in.Dnsmasq, &out.Dnsmasq
		*out = new(string)
		**out = **in
	}
	if in.Etcd != nil {
		in, out := &in.Etcd, &out.Etcd
		*out = new(string)
		**out = **in
	}
	if in.Flannel != nil {
		in, out := &in.Flannel, &out.Flannel
		*out = new(string)
		**out = **in
	}
	if in.FlannelCni != nil {
		in, out := &in.FlannelCni, &out.FlannelCni
		*out = new(string)
		**out = **in
	}
	if in.Ingress != nil {
		in, out := &in.Ingress, &out.Ingress
		*out = new(string)
		**out = **in
	}
	if in.IngressBackend != nil {
		in, out := &in.IngressBackend, &out.IngressBackend
		*out = new(string)
		**out = **in
	}
	if in.KubeDNS != nil {
		in, out := &in.KubeDNS, &out.KubeDNS
		*out = new(string)
		**out = **in
	}
	if in.KubeDNSAutoscaler != nil {
		in, out := &in.KubeDNSAutoscaler, &out.KubeDNSAutoscaler
		*out = new(string)
		**out = **in
	}
	if in.KubeDNSSidecar != nil {
		in, out := &in.KubeDNSSidecar, &out.KubeDNSSidecar
		*out = new(string)
		**out = **in
	}
	if in.Kubernetes != nil {
		in, out := &in.Kubernetes, &out.Kubernetes
		*out = new(string)
		**out = **in
	}
	if in.KubernetesServicesSidecar != nil {
		in, out := &in.KubernetesServicesSidecar, &out.KubernetesServicesSidecar
		*out = new(string)
		**out = **in
	}
	if in.MetricsServer != nil {
		in, out := &in.MetricsServer, &out.MetricsServer
		*out = new(string)
		**out = **in
	}
	if in.NginxProxy != nil {
		in, out := &in.NginxProxy, &out.NginxProxy
		*out = new(string)
		**out = **in
	}
	if in.Nodelocal != nil {
		in, out := &in.Nodelocal, &out.Nodelocal
		*out = new(string)
		**out = **in
	}
	if in.PodInfraContainer != nil {
		in, out := &in.PodInfraContainer, &out.PodInfraContainer
		*out = new(string)
		**out = **in
	}
	if in.WeaveCni != nil {
		in, out := &in.WeaveCni, &out.WeaveCni
		*out = new(string)
		**out = **in
	}
	if in.WeaveNode != nil {
		in, out := &in.WeaveNode, &out.WeaveNode
		*out = new(string)
		**out = **in
	}
	if in.WindowsPodInfraContainer != nil {
		in, out := &in.WindowsPodInfraContainer, &out.WindowsPodInfraContainer
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SystemImagesParameters.
func (in *SystemImagesParameters) DeepCopy() *SystemImagesParameters {
	if in == nil {
		return nil
	}
	out := new(SystemImagesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaintsObservation) DeepCopyInto(out *TaintsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaintsObservation.
func (in *TaintsObservation) DeepCopy() *TaintsObservation {
	if in == nil {
		return nil
	}
	out := new(TaintsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaintsParameters) DeepCopyInto(out *TaintsParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaintsParameters.
func (in *TaintsParameters) DeepCopy() *TaintsParameters {
	if in == nil {
		return nil
	}
	out := new(TaintsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpgradeStrategyObservation) DeepCopyInto(out *UpgradeStrategyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpgradeStrategyObservation.
func (in *UpgradeStrategyObservation) DeepCopy() *UpgradeStrategyObservation {
	if in == nil {
		return nil
	}
	out := new(UpgradeStrategyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpgradeStrategyParameters) DeepCopyInto(out *UpgradeStrategyParameters) {
	*out = *in
	if in.Drain != nil {
		in, out := &in.Drain, &out.Drain
		*out = new(bool)
		**out = **in
	}
	if in.DrainInput != nil {
		in, out := &in.DrainInput, &out.DrainInput
		*out = make([]DrainInputParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxUnavailableControlplane != nil {
		in, out := &in.MaxUnavailableControlplane, &out.MaxUnavailableControlplane
		*out = new(string)
		**out = **in
	}
	if in.MaxUnavailableWorker != nil {
		in, out := &in.MaxUnavailableWorker, &out.MaxUnavailableWorker
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpgradeStrategyParameters.
func (in *UpgradeStrategyParameters) DeepCopy() *UpgradeStrategyParameters {
	if in == nil {
		return nil
	}
	out := new(UpgradeStrategyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualCenterObservation) DeepCopyInto(out *VirtualCenterObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualCenterObservation.
func (in *VirtualCenterObservation) DeepCopy() *VirtualCenterObservation {
	if in == nil {
		return nil
	}
	out := new(VirtualCenterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualCenterParameters) DeepCopyInto(out *VirtualCenterParameters) {
	*out = *in
	if in.Datacenters != nil {
		in, out := &in.Datacenters, &out.Datacenters
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.SoapRoundtripCount != nil {
		in, out := &in.SoapRoundtripCount, &out.SoapRoundtripCount
		*out = new(float64)
		**out = **in
	}
	out.UserSecretRef = in.UserSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualCenterParameters.
func (in *VirtualCenterParameters) DeepCopy() *VirtualCenterParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualCenterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereCloudConfigGlobalObservation) DeepCopyInto(out *VsphereCloudConfigGlobalObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereCloudConfigGlobalObservation.
func (in *VsphereCloudConfigGlobalObservation) DeepCopy() *VsphereCloudConfigGlobalObservation {
	if in == nil {
		return nil
	}
	out := new(VsphereCloudConfigGlobalObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereCloudConfigGlobalParameters) DeepCopyInto(out *VsphereCloudConfigGlobalParameters) {
	*out = *in
	if in.Datacenter != nil {
		in, out := &in.Datacenter, &out.Datacenter
		*out = new(string)
		**out = **in
	}
	if in.Datacenters != nil {
		in, out := &in.Datacenters, &out.Datacenters
		*out = new(string)
		**out = **in
	}
	if in.Datastore != nil {
		in, out := &in.Datastore, &out.Datastore
		*out = new(string)
		**out = **in
	}
	if in.InsecureFlag != nil {
		in, out := &in.InsecureFlag, &out.InsecureFlag
		*out = new(bool)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.SoapRoundtripCount != nil {
		in, out := &in.SoapRoundtripCount, &out.SoapRoundtripCount
		*out = new(float64)
		**out = **in
	}
	if in.UserSecretRef != nil {
		in, out := &in.UserSecretRef, &out.UserSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.VMName != nil {
		in, out := &in.VMName, &out.VMName
		*out = new(string)
		**out = **in
	}
	if in.VMUUID != nil {
		in, out := &in.VMUUID, &out.VMUUID
		*out = new(string)
		**out = **in
	}
	if in.WorkingDir != nil {
		in, out := &in.WorkingDir, &out.WorkingDir
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereCloudConfigGlobalParameters.
func (in *VsphereCloudConfigGlobalParameters) DeepCopy() *VsphereCloudConfigGlobalParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereCloudConfigGlobalParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereCloudConfigObservation) DeepCopyInto(out *VsphereCloudConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereCloudConfigObservation.
func (in *VsphereCloudConfigObservation) DeepCopy() *VsphereCloudConfigObservation {
	if in == nil {
		return nil
	}
	out := new(VsphereCloudConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereCloudConfigParameters) DeepCopyInto(out *VsphereCloudConfigParameters) {
	*out = *in
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Global != nil {
		in, out := &in.Global, &out.Global
		*out = make([]VsphereCloudConfigGlobalParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]NetworkParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VirtualCenter != nil {
		in, out := &in.VirtualCenter, &out.VirtualCenter
		*out = make([]VirtualCenterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]WorkspaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereCloudConfigParameters.
func (in *VsphereCloudConfigParameters) DeepCopy() *VsphereCloudConfigParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereCloudConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereCloudProviderDiskObservation) DeepCopyInto(out *VsphereCloudProviderDiskObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereCloudProviderDiskObservation.
func (in *VsphereCloudProviderDiskObservation) DeepCopy() *VsphereCloudProviderDiskObservation {
	if in == nil {
		return nil
	}
	out := new(VsphereCloudProviderDiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereCloudProviderDiskParameters) DeepCopyInto(out *VsphereCloudProviderDiskParameters) {
	*out = *in
	if in.ScsiControllerType != nil {
		in, out := &in.ScsiControllerType, &out.ScsiControllerType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereCloudProviderDiskParameters.
func (in *VsphereCloudProviderDiskParameters) DeepCopy() *VsphereCloudProviderDiskParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereCloudProviderDiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereCloudProviderGlobalObservation) DeepCopyInto(out *VsphereCloudProviderGlobalObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereCloudProviderGlobalObservation.
func (in *VsphereCloudProviderGlobalObservation) DeepCopy() *VsphereCloudProviderGlobalObservation {
	if in == nil {
		return nil
	}
	out := new(VsphereCloudProviderGlobalObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereCloudProviderGlobalParameters) DeepCopyInto(out *VsphereCloudProviderGlobalParameters) {
	*out = *in
	if in.Datacenter != nil {
		in, out := &in.Datacenter, &out.Datacenter
		*out = new(string)
		**out = **in
	}
	if in.Datacenters != nil {
		in, out := &in.Datacenters, &out.Datacenters
		*out = new(string)
		**out = **in
	}
	if in.Datastore != nil {
		in, out := &in.Datastore, &out.Datastore
		*out = new(string)
		**out = **in
	}
	if in.InsecureFlag != nil {
		in, out := &in.InsecureFlag, &out.InsecureFlag
		*out = new(bool)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.SoapRoundtripCount != nil {
		in, out := &in.SoapRoundtripCount, &out.SoapRoundtripCount
		*out = new(float64)
		**out = **in
	}
	if in.UserSecretRef != nil {
		in, out := &in.UserSecretRef, &out.UserSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.VMName != nil {
		in, out := &in.VMName, &out.VMName
		*out = new(string)
		**out = **in
	}
	if in.VMUUID != nil {
		in, out := &in.VMUUID, &out.VMUUID
		*out = new(string)
		**out = **in
	}
	if in.WorkingDir != nil {
		in, out := &in.WorkingDir, &out.WorkingDir
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereCloudProviderGlobalParameters.
func (in *VsphereCloudProviderGlobalParameters) DeepCopy() *VsphereCloudProviderGlobalParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereCloudProviderGlobalParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereCloudProviderNetworkObservation) DeepCopyInto(out *VsphereCloudProviderNetworkObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereCloudProviderNetworkObservation.
func (in *VsphereCloudProviderNetworkObservation) DeepCopy() *VsphereCloudProviderNetworkObservation {
	if in == nil {
		return nil
	}
	out := new(VsphereCloudProviderNetworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereCloudProviderNetworkParameters) DeepCopyInto(out *VsphereCloudProviderNetworkParameters) {
	*out = *in
	if in.PublicNetwork != nil {
		in, out := &in.PublicNetwork, &out.PublicNetwork
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereCloudProviderNetworkParameters.
func (in *VsphereCloudProviderNetworkParameters) DeepCopy() *VsphereCloudProviderNetworkParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereCloudProviderNetworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereCloudProviderObservation) DeepCopyInto(out *VsphereCloudProviderObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereCloudProviderObservation.
func (in *VsphereCloudProviderObservation) DeepCopy() *VsphereCloudProviderObservation {
	if in == nil {
		return nil
	}
	out := new(VsphereCloudProviderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereCloudProviderParameters) DeepCopyInto(out *VsphereCloudProviderParameters) {
	*out = *in
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]VsphereCloudProviderDiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Global != nil {
		in, out := &in.Global, &out.Global
		*out = make([]VsphereCloudProviderGlobalParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]VsphereCloudProviderNetworkParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VirtualCenter != nil {
		in, out := &in.VirtualCenter, &out.VirtualCenter
		*out = make([]VsphereCloudProviderVirtualCenterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]VsphereCloudProviderWorkspaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereCloudProviderParameters.
func (in *VsphereCloudProviderParameters) DeepCopy() *VsphereCloudProviderParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereCloudProviderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereCloudProviderVirtualCenterObservation) DeepCopyInto(out *VsphereCloudProviderVirtualCenterObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereCloudProviderVirtualCenterObservation.
func (in *VsphereCloudProviderVirtualCenterObservation) DeepCopy() *VsphereCloudProviderVirtualCenterObservation {
	if in == nil {
		return nil
	}
	out := new(VsphereCloudProviderVirtualCenterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereCloudProviderVirtualCenterParameters) DeepCopyInto(out *VsphereCloudProviderVirtualCenterParameters) {
	*out = *in
	if in.Datacenters != nil {
		in, out := &in.Datacenters, &out.Datacenters
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.SoapRoundtripCount != nil {
		in, out := &in.SoapRoundtripCount, &out.SoapRoundtripCount
		*out = new(float64)
		**out = **in
	}
	out.UserSecretRef = in.UserSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereCloudProviderVirtualCenterParameters.
func (in *VsphereCloudProviderVirtualCenterParameters) DeepCopy() *VsphereCloudProviderVirtualCenterParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereCloudProviderVirtualCenterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereCloudProviderWorkspaceObservation) DeepCopyInto(out *VsphereCloudProviderWorkspaceObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereCloudProviderWorkspaceObservation.
func (in *VsphereCloudProviderWorkspaceObservation) DeepCopy() *VsphereCloudProviderWorkspaceObservation {
	if in == nil {
		return nil
	}
	out := new(VsphereCloudProviderWorkspaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereCloudProviderWorkspaceParameters) DeepCopyInto(out *VsphereCloudProviderWorkspaceParameters) {
	*out = *in
	if in.Datacenter != nil {
		in, out := &in.Datacenter, &out.Datacenter
		*out = new(string)
		**out = **in
	}
	if in.DefaultDatastore != nil {
		in, out := &in.DefaultDatastore, &out.DefaultDatastore
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.ResourcepoolPath != nil {
		in, out := &in.ResourcepoolPath, &out.ResourcepoolPath
		*out = new(string)
		**out = **in
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereCloudProviderWorkspaceParameters.
func (in *VsphereCloudProviderWorkspaceParameters) DeepCopy() *VsphereCloudProviderWorkspaceParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereCloudProviderWorkspaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeaveNetworkProviderObservation) DeepCopyInto(out *WeaveNetworkProviderObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeaveNetworkProviderObservation.
func (in *WeaveNetworkProviderObservation) DeepCopy() *WeaveNetworkProviderObservation {
	if in == nil {
		return nil
	}
	out := new(WeaveNetworkProviderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeaveNetworkProviderParameters) DeepCopyInto(out *WeaveNetworkProviderParameters) {
	*out = *in
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeaveNetworkProviderParameters.
func (in *WeaveNetworkProviderParameters) DeepCopy() *WeaveNetworkProviderParameters {
	if in == nil {
		return nil
	}
	out := new(WeaveNetworkProviderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookObservation) DeepCopyInto(out *WebhookObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookObservation.
func (in *WebhookObservation) DeepCopy() *WebhookObservation {
	if in == nil {
		return nil
	}
	out := new(WebhookObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookParameters) DeepCopyInto(out *WebhookParameters) {
	*out = *in
	if in.CacheTimeout != nil {
		in, out := &in.CacheTimeout, &out.CacheTimeout
		*out = new(string)
		**out = **in
	}
	if in.ConfigFile != nil {
		in, out := &in.ConfigFile, &out.ConfigFile
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookParameters.
func (in *WebhookParameters) DeepCopy() *WebhookParameters {
	if in == nil {
		return nil
	}
	out := new(WebhookParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerHostsObservation) DeepCopyInto(out *WorkerHostsObservation) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.NodeName != nil {
		in, out := &in.NodeName, &out.NodeName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerHostsObservation.
func (in *WorkerHostsObservation) DeepCopy() *WorkerHostsObservation {
	if in == nil {
		return nil
	}
	out := new(WorkerHostsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerHostsParameters) DeepCopyInto(out *WorkerHostsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerHostsParameters.
func (in *WorkerHostsParameters) DeepCopy() *WorkerHostsParameters {
	if in == nil {
		return nil
	}
	out := new(WorkerHostsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceObservation) DeepCopyInto(out *WorkspaceObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceObservation.
func (in *WorkspaceObservation) DeepCopy() *WorkspaceObservation {
	if in == nil {
		return nil
	}
	out := new(WorkspaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceParameters) DeepCopyInto(out *WorkspaceParameters) {
	*out = *in
	if in.Datacenter != nil {
		in, out := &in.Datacenter, &out.Datacenter
		*out = new(string)
		**out = **in
	}
	if in.DefaultDatastore != nil {
		in, out := &in.DefaultDatastore, &out.DefaultDatastore
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.ResourcepoolPath != nil {
		in, out := &in.ResourcepoolPath, &out.ResourcepoolPath
		*out = new(string)
		**out = **in
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceParameters.
func (in *WorkspaceParameters) DeepCopy() *WorkspaceParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceParameters)
	in.DeepCopyInto(out)
	return out
}
